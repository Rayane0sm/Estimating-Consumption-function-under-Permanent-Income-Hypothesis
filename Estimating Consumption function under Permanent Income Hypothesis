{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1BlG46pr22TSICV6vEjNaT-u4v43I8fZj","timestamp":1704986871624},{"file_id":"1Cy6N4HbaDYnBoVftOyqHHGZFzO_2BNOC","timestamp":1697066573707}],"authorship_tag":"ABX9TyMH0o0QB8dIvZoV4PGIEGLh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["*Rayane Smail*"],"metadata":{"id":"jcC1n_DADCw-"}},{"cell_type":"markdown","source":["**Estimating Consumption function under\n","Permanent Income Hypothesis: A\n","comparison between Nigeria and South\n","Africa**\n","https://mpra.ub.uni-muenchen.de/65787/"],"metadata":{"id":"3nE6PjITCX1g"}},{"cell_type":"markdown","source":["L'objectif de cette étude était d'estimer la fonction de consommation au Nigeria et en Afrique du Sud en utilisant l'Hypothèse du Revenu Permanent. Pour ce faire, nous avons utilisé des données de séries chronologiques couvrant la période de 1980 à 2013, comprenant les dépenses de consommation finale des ménages, le PIB réel et le taux d'intérêt réel.\n","\n"],"metadata":{"id":"9E-DU-8n7_TX"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"6hustt4XrB8M"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from scipy.stats import skew, kurtosis, jarque_bera\n","from scipy.stats import jarque_bera\n","from sklearn.linear_model import LinearRegression"]},{"cell_type":"code","source":["# Charger les données à partir du fichier xlsx\n","\n","data = \"/content/nigeria.xlsx\"\n","nigeria = pd.read_excel(data)"],"metadata":{"id":"lajTzsCxr8La"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nigeria"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"0iscSSZJr8Fx","executionInfo":{"status":"ok","timestamp":1697058329637,"user_tz":-60,"elapsed":1865,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"4e935dba-cad1-46a2-dc3e-42e25e02065a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year           GDP        RIR            HFCE\n","0   1980  2.273288e+13 -29.269517     13699934721\n","1   1981  1.974853e+13   5.576789     13699934721\n","2   1982  1.840496e+13   3.991658     18410934721\n","3   1983  1.639439e+13   1.569258     33571887385\n","4   1984  1.621149e+13 -25.666759     59110877153\n","5   1985  1.717008e+13 -13.968162     89910037716\n","6   1986  1.718055e+13  -6.867483     82731956776\n","7   1987  1.773034e+13  -4.257605    103205143840\n","8   1988  1.903069e+13  -6.289568    155931008680\n","9   1989  1.939596e+13  -2.994708    123948622380\n","10  1990  2.168020e+13  -3.547418    170990246970\n","11  1991  2.175790e+13 -65.857149    229540149800\n","12  1992  2.276555e+13  -4.586180    402737903600\n","13  1993  2.230224e+13  -8.022386    590235583900\n","14  1994  2.189747e+13   4.342493    921683664600\n","15  1995  2.188156e+13   2.343231   1637261542400\n","16  1996  2.279969e+13   4.310292   2315635994800\n","17  1997  2.346934e+13  -4.769645   2420191902900\n","18  1998  2.407515e+13  -2.962676   2931136228900\n","19  1999  2.421578e+13  -6.612412   2854331799500\n","20  2000  2.543042e+13  17.466244   2875675703300\n","21  2001  2.693532e+13   0.990847   4962276553700\n","22  2002  3.106427e+13 -14.987168   7433701656600\n","23  2003  3.334662e+13  -7.052475   8878957955800\n","24  2004  3.643137e+13 -15.920233  10780673164200\n","25  2005  3.877701e+13 -31.452566  13932646087000\n","26  2006  4.112668e+13  -5.260784  15352488557900\n","27  2007  4.383739e+13  12.126612  22945526041000\n","28  2008  4.680276e+13  11.484669  24024762246200\n","29  2009  5.056426e+13   6.047248  29596620437800\n","30  2010  5.461226e+13  -1.140889  36676904873600\n","31  2011  5.751104e+13  12.138702  41686511269600\n","32  2012  5.994379e+13   3.023542  42394482324900\n","33  2013  6.394285e+13   9.935713  59048100290000"],"text/html":["\n","  <div id=\"df-c81409ec-afe8-4624-80e6-0a2250554324\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1980</td>\n","      <td>2.273288e+13</td>\n","      <td>-29.269517</td>\n","      <td>13699934721</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1981</td>\n","      <td>1.974853e+13</td>\n","      <td>5.576789</td>\n","      <td>13699934721</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1982</td>\n","      <td>1.840496e+13</td>\n","      <td>3.991658</td>\n","      <td>18410934721</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>1.639439e+13</td>\n","      <td>1.569258</td>\n","      <td>33571887385</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>1.621149e+13</td>\n","      <td>-25.666759</td>\n","      <td>59110877153</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>1.717008e+13</td>\n","      <td>-13.968162</td>\n","      <td>89910037716</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1986</td>\n","      <td>1.718055e+13</td>\n","      <td>-6.867483</td>\n","      <td>82731956776</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1987</td>\n","      <td>1.773034e+13</td>\n","      <td>-4.257605</td>\n","      <td>103205143840</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1988</td>\n","      <td>1.903069e+13</td>\n","      <td>-6.289568</td>\n","      <td>155931008680</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1989</td>\n","      <td>1.939596e+13</td>\n","      <td>-2.994708</td>\n","      <td>123948622380</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1990</td>\n","      <td>2.168020e+13</td>\n","      <td>-3.547418</td>\n","      <td>170990246970</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1991</td>\n","      <td>2.175790e+13</td>\n","      <td>-65.857149</td>\n","      <td>229540149800</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1992</td>\n","      <td>2.276555e+13</td>\n","      <td>-4.586180</td>\n","      <td>402737903600</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1993</td>\n","      <td>2.230224e+13</td>\n","      <td>-8.022386</td>\n","      <td>590235583900</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1994</td>\n","      <td>2.189747e+13</td>\n","      <td>4.342493</td>\n","      <td>921683664600</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1995</td>\n","      <td>2.188156e+13</td>\n","      <td>2.343231</td>\n","      <td>1637261542400</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1996</td>\n","      <td>2.279969e+13</td>\n","      <td>4.310292</td>\n","      <td>2315635994800</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1997</td>\n","      <td>2.346934e+13</td>\n","      <td>-4.769645</td>\n","      <td>2420191902900</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1998</td>\n","      <td>2.407515e+13</td>\n","      <td>-2.962676</td>\n","      <td>2931136228900</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1999</td>\n","      <td>2.421578e+13</td>\n","      <td>-6.612412</td>\n","      <td>2854331799500</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2000</td>\n","      <td>2.543042e+13</td>\n","      <td>17.466244</td>\n","      <td>2875675703300</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2001</td>\n","      <td>2.693532e+13</td>\n","      <td>0.990847</td>\n","      <td>4962276553700</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2002</td>\n","      <td>3.106427e+13</td>\n","      <td>-14.987168</td>\n","      <td>7433701656600</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2003</td>\n","      <td>3.334662e+13</td>\n","      <td>-7.052475</td>\n","      <td>8878957955800</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2004</td>\n","      <td>3.643137e+13</td>\n","      <td>-15.920233</td>\n","      <td>10780673164200</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2005</td>\n","      <td>3.877701e+13</td>\n","      <td>-31.452566</td>\n","      <td>13932646087000</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2006</td>\n","      <td>4.112668e+13</td>\n","      <td>-5.260784</td>\n","      <td>15352488557900</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2007</td>\n","      <td>4.383739e+13</td>\n","      <td>12.126612</td>\n","      <td>22945526041000</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2008</td>\n","      <td>4.680276e+13</td>\n","      <td>11.484669</td>\n","      <td>24024762246200</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2009</td>\n","      <td>5.056426e+13</td>\n","      <td>6.047248</td>\n","      <td>29596620437800</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2010</td>\n","      <td>5.461226e+13</td>\n","      <td>-1.140889</td>\n","      <td>36676904873600</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011</td>\n","      <td>5.751104e+13</td>\n","      <td>12.138702</td>\n","      <td>41686511269600</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2012</td>\n","      <td>5.994379e+13</td>\n","      <td>3.023542</td>\n","      <td>42394482324900</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2013</td>\n","      <td>6.394285e+13</td>\n","      <td>9.935713</td>\n","      <td>59048100290000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c81409ec-afe8-4624-80e6-0a2250554324')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c81409ec-afe8-4624-80e6-0a2250554324 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c81409ec-afe8-4624-80e6-0a2250554324');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bacb3d44-fc55-4d89-8128-492ce4e3040a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bacb3d44-fc55-4d89-8128-492ce4e3040a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bacb3d44-fc55-4d89-8128-492ce4e3040a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Charger les données à partir du fichier xlsx\n","\n","data = \"/content/southafrica (1).xlsx\"\n","south = pd.read_excel(data)"],"metadata":{"id":"j7JM4dLCr8CT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["south"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"35GOJLqFr7-t","executionInfo":{"status":"ok","timestamp":1697058411493,"user_tz":-60,"elapsed":675,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"e4138099-bc6b-4438-9202-4f9927f7e0d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year          GDP         RIR          HFCE\n","0   1980  2.032312e+12 -11.009011  3.728100e+10\n","1   1981  2.141260e+12   2.328029  4.633000e+10\n","2   1982  2.133050e+12   4.172434  5.437600e+10\n","3   1983  2.093662e+12  -0.343775  6.373600e+10\n","4   1984  2.200421e+12  10.060939  7.392100e+10\n","5   1985  2.173762e+12   4.611218  8.354400e+10\n","6   1986  2.174150e+12  -1.991767  9.915200e+10\n","7   1987  2.219823e+12  -2.044467  1.194160e+11\n","8   1988  2.313058e+12  -0.075809  1.455990e+11\n","9   1989  2.368451e+12   2.350216  1.725160e+11\n","10  1990  2.360925e+12   4.811415  2.094950e+11\n","11  1991  2.336885e+12   4.027493  2.413910e+11\n","12  1992  2.286945e+12   3.654137  2.727690e+11\n","13  1993  2.315156e+12   2.464688  3.069521e+11\n","14  1994  2.389241e+12   5.255470  3.513969e+11\n","15  1995  2.463307e+12   6.367395  4.030190e+11\n","16  1996  2.569229e+12  10.644809  4.529423e+11\n","17  1997  2.636029e+12  10.969899  5.084636e+11\n","18  1998  2.649210e+12  12.691034  5.545922e+11\n","19  1999  2.712791e+12  10.395067  6.113912e+11\n","20  2000  2.826728e+12   4.870582  6.911097e+11\n","21  2001  2.903049e+12   5.538341  7.615146e+11\n","22  2002  3.010473e+12   2.854186  8.528962e+11\n","23  2003  3.099254e+12   8.047848  9.226022e+11\n","24  2004  3.240412e+12   4.950384  1.052105e+12\n","25  2005  3.411410e+12   4.761489  1.168207e+12\n","26  2006  3.602579e+12   4.810302  1.307912e+12\n","27  2007  3.795694e+12   4.546046  1.489372e+12\n","28  2008  3.916816e+12   6.745152  1.646301e+12\n","29  2009  3.856572e+12   2.802509  1.732563e+12\n","30  2010  3.973802e+12   3.490960  1.905709e+12\n","31  2011  4.099714e+12   3.279301  2.093803e+12\n","32  2012  4.197952e+12   3.882873  2.293240e+12\n","33  2013  4.302291e+12   2.509245  2.470752e+12"],"text/html":["\n","  <div id=\"df-c86aaa25-92bc-4d7d-935d-b4b4c158506d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1980</td>\n","      <td>2.032312e+12</td>\n","      <td>-11.009011</td>\n","      <td>3.728100e+10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1981</td>\n","      <td>2.141260e+12</td>\n","      <td>2.328029</td>\n","      <td>4.633000e+10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1982</td>\n","      <td>2.133050e+12</td>\n","      <td>4.172434</td>\n","      <td>5.437600e+10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>2.093662e+12</td>\n","      <td>-0.343775</td>\n","      <td>6.373600e+10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>2.200421e+12</td>\n","      <td>10.060939</td>\n","      <td>7.392100e+10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>2.173762e+12</td>\n","      <td>4.611218</td>\n","      <td>8.354400e+10</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1986</td>\n","      <td>2.174150e+12</td>\n","      <td>-1.991767</td>\n","      <td>9.915200e+10</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1987</td>\n","      <td>2.219823e+12</td>\n","      <td>-2.044467</td>\n","      <td>1.194160e+11</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1988</td>\n","      <td>2.313058e+12</td>\n","      <td>-0.075809</td>\n","      <td>1.455990e+11</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1989</td>\n","      <td>2.368451e+12</td>\n","      <td>2.350216</td>\n","      <td>1.725160e+11</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1990</td>\n","      <td>2.360925e+12</td>\n","      <td>4.811415</td>\n","      <td>2.094950e+11</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1991</td>\n","      <td>2.336885e+12</td>\n","      <td>4.027493</td>\n","      <td>2.413910e+11</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1992</td>\n","      <td>2.286945e+12</td>\n","      <td>3.654137</td>\n","      <td>2.727690e+11</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1993</td>\n","      <td>2.315156e+12</td>\n","      <td>2.464688</td>\n","      <td>3.069521e+11</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1994</td>\n","      <td>2.389241e+12</td>\n","      <td>5.255470</td>\n","      <td>3.513969e+11</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1995</td>\n","      <td>2.463307e+12</td>\n","      <td>6.367395</td>\n","      <td>4.030190e+11</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1996</td>\n","      <td>2.569229e+12</td>\n","      <td>10.644809</td>\n","      <td>4.529423e+11</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1997</td>\n","      <td>2.636029e+12</td>\n","      <td>10.969899</td>\n","      <td>5.084636e+11</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1998</td>\n","      <td>2.649210e+12</td>\n","      <td>12.691034</td>\n","      <td>5.545922e+11</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1999</td>\n","      <td>2.712791e+12</td>\n","      <td>10.395067</td>\n","      <td>6.113912e+11</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2000</td>\n","      <td>2.826728e+12</td>\n","      <td>4.870582</td>\n","      <td>6.911097e+11</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2001</td>\n","      <td>2.903049e+12</td>\n","      <td>5.538341</td>\n","      <td>7.615146e+11</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2002</td>\n","      <td>3.010473e+12</td>\n","      <td>2.854186</td>\n","      <td>8.528962e+11</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2003</td>\n","      <td>3.099254e+12</td>\n","      <td>8.047848</td>\n","      <td>9.226022e+11</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2004</td>\n","      <td>3.240412e+12</td>\n","      <td>4.950384</td>\n","      <td>1.052105e+12</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2005</td>\n","      <td>3.411410e+12</td>\n","      <td>4.761489</td>\n","      <td>1.168207e+12</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2006</td>\n","      <td>3.602579e+12</td>\n","      <td>4.810302</td>\n","      <td>1.307912e+12</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2007</td>\n","      <td>3.795694e+12</td>\n","      <td>4.546046</td>\n","      <td>1.489372e+12</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2008</td>\n","      <td>3.916816e+12</td>\n","      <td>6.745152</td>\n","      <td>1.646301e+12</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2009</td>\n","      <td>3.856572e+12</td>\n","      <td>2.802509</td>\n","      <td>1.732563e+12</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2010</td>\n","      <td>3.973802e+12</td>\n","      <td>3.490960</td>\n","      <td>1.905709e+12</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011</td>\n","      <td>4.099714e+12</td>\n","      <td>3.279301</td>\n","      <td>2.093803e+12</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2012</td>\n","      <td>4.197952e+12</td>\n","      <td>3.882873</td>\n","      <td>2.293240e+12</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2013</td>\n","      <td>4.302291e+12</td>\n","      <td>2.509245</td>\n","      <td>2.470752e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c86aaa25-92bc-4d7d-935d-b4b4c158506d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c86aaa25-92bc-4d7d-935d-b4b4c158506d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c86aaa25-92bc-4d7d-935d-b4b4c158506d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3657aad2-3e6c-4903-9a2e-4f5b65390643\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3657aad2-3e6c-4903-9a2e-4f5b65390643')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3657aad2-3e6c-4903-9a2e-4f5b65390643 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["**DATA EXPLORATION FOR NIGERIA:**"],"metadata":{"id":"kzVlvU-CsdU-"}},{"cell_type":"code","source":["#Exploration des données\n","print(nigeria.head())  # Affiche les premières lignes du dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQdPb94Mr77Q","executionInfo":{"status":"ok","timestamp":1697058457948,"user_tz":-60,"elapsed":2033,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"84522aae-d8f1-468a-9139-2e35fb22bebe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   year           GDP        RIR         HFCE\n","0  1980  2.273288e+13 -29.269517  13699934721\n","1  1981  1.974853e+13   5.576789  13699934721\n","2  1982  1.840496e+13   3.991658  18410934721\n","3  1983  1.639439e+13   1.569258  33571887385\n","4  1984  1.621149e+13 -25.666759  59110877153\n"]}]},{"cell_type":"code","source":["print(nigeria.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wtFw_xTRsLyX","executionInfo":{"status":"ok","timestamp":1697058500123,"user_tz":-60,"elapsed":1275,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"432ed52e-a745-43e6-8f99-f2bdcc00803f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34 entries, 0 to 33\n","Data columns (total 4 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   year    34 non-null     int64  \n"," 1   GDP     34 non-null     float64\n"," 2   RIR     34 non-null     float64\n"," 3   HFCE    34 non-null     int64  \n","dtypes: float64(2), int64(2)\n","memory usage: 1.2 KB\n","None\n"]}]},{"cell_type":"code","source":["nigeria.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"o4iwD4nXsLvr","executionInfo":{"status":"ok","timestamp":1697058504873,"user_tz":-60,"elapsed":844,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"c8da0ef3-f4f5-47bd-c2b1-18dab25a1faf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year           GDP        RIR          HFCE\n","count    34.000000  3.400000e+01  34.000000  3.400000e+01\n","mean   1996.500000  3.003444e+13  -4.886426  9.875214e+12\n","std       9.958246  1.405189e+13  15.607140  1.535053e+13\n","min    1980.000000  1.621149e+13 -65.857149  1.369993e+10\n","25%    1988.250000  2.023145e+13  -7.006227  1.319442e+11\n","50%    1996.500000  2.313452e+13  -3.271063  2.367914e+12\n","75%    2004.750000  3.819060e+13   4.230634  1.314465e+13\n","max    2013.000000  6.394285e+13  17.466244  5.904810e+13"],"text/html":["\n","  <div id=\"df-7a820157-454a-42fb-b322-80fa80496a1b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>34.000000</td>\n","      <td>3.400000e+01</td>\n","      <td>34.000000</td>\n","      <td>3.400000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1996.500000</td>\n","      <td>3.003444e+13</td>\n","      <td>-4.886426</td>\n","      <td>9.875214e+12</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>9.958246</td>\n","      <td>1.405189e+13</td>\n","      <td>15.607140</td>\n","      <td>1.535053e+13</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1980.000000</td>\n","      <td>1.621149e+13</td>\n","      <td>-65.857149</td>\n","      <td>1.369993e+10</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1988.250000</td>\n","      <td>2.023145e+13</td>\n","      <td>-7.006227</td>\n","      <td>1.319442e+11</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1996.500000</td>\n","      <td>2.313452e+13</td>\n","      <td>-3.271063</td>\n","      <td>2.367914e+12</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2004.750000</td>\n","      <td>3.819060e+13</td>\n","      <td>4.230634</td>\n","      <td>1.314465e+13</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2013.000000</td>\n","      <td>6.394285e+13</td>\n","      <td>17.466244</td>\n","      <td>5.904810e+13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a820157-454a-42fb-b322-80fa80496a1b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a820157-454a-42fb-b322-80fa80496a1b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a820157-454a-42fb-b322-80fa80496a1b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72a2127f-8f9e-44d0-8b75-d51150cc5107\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72a2127f-8f9e-44d0-8b75-d51150cc5107')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72a2127f-8f9e-44d0-8b75-d51150cc5107 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Ces statistiques portent sur les données de 34 observations couvrant la période de 1980 à 2013:\n","\n","- Le PIB (GDP) moyen est d'environ 3,003,444 milliards d'unités monétaires.\n","- Le taux d'intérêt réel moyen est d'environ -4.89 %.\n","- Les dépenses de consommation finale des ménages moyennes sont d'environ 9,875,214 milliards d'unités monétaires.\n","\n","Ces chiffres montrent que les variables ont des variations importantes au fil du temps. Les valeurs minimales et maximales indiquent que le PIB varie de 1,621,149 milliards d'unités monétaires en 1980 à 6,394,285 milliards d'unités monétaires en 2013. Le taux d'intérêt réel varie de -65.86 % à 17.47 %, et les dépenses de consommation varient de 13,699,930 milliards d'unités monétaires à 59,048,100 milliards d'unités monétaires.\n","\n","Ces statistiques aident à comprendre la gamme et la variabilité des données, ce qui est essentiel pour toute analyse statistique ou économétrique."],"metadata":{"id":"B2ioRp8a9mRU"}},{"cell_type":"code","source":["# Statistiques descriptives pour chaque variable\n","statistics = nigeria.describe()\n","\n","# Skewness (asymétrie) pour chaque variable\n","skewness = nigeria.skew()\n","\n","# Kurtosis (aplatissement) pour chaque variable\n","kurt = nigeria.kurtosis()\n","\n","# Test de normalité de Jarque-Bera pour chaque variable\n","jarque_bera_test = nigeria.apply(lambda x: jarque_bera(x.dropna()))\n","\n","# Étape 3: Affichage des résultats\n","print(\"Statistiques descriptives pour chaque variable :\")\n","print(statistics)\n","\n","print(\"\\nSkewness (asymétrie) pour chaque variable :\")\n","print(skewness)\n","\n","print(\"\\nKurtosis (aplatissement) pour chaque variable :\")\n","print(kurt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tJivBvYpsLsN","executionInfo":{"status":"ok","timestamp":1697058512896,"user_tz":-60,"elapsed":13,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"5c229e11-e947-4973-e883-736014c1ab2d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Statistiques descriptives pour chaque variable :\n","              year           GDP        RIR          HFCE\n","count    34.000000  3.400000e+01  34.000000  3.400000e+01\n","mean   1996.500000  3.003444e+13  -4.886426  9.875214e+12\n","std       9.958246  1.405189e+13  15.607140  1.535053e+13\n","min    1980.000000  1.621149e+13 -65.857149  1.369993e+10\n","25%    1988.250000  2.023145e+13  -7.006227  1.319442e+11\n","50%    1996.500000  2.313452e+13  -3.271063  2.367914e+12\n","75%    2004.750000  3.819060e+13   4.230634  1.314465e+13\n","max    2013.000000  6.394285e+13  17.466244  5.904810e+13\n","\n","Skewness (asymétrie) pour chaque variable :\n","year    0.000000\n","GDP     1.143091\n","RIR    -2.009343\n","HFCE    1.793823\n","dtype: float64\n","\n","Kurtosis (aplatissement) pour chaque variable :\n","year   -1.200000\n","GDP     0.075913\n","RIR     6.193103\n","HFCE    2.518428\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["Les mesures de skewness (asymétrie) et de kurtosis (aplatissement) sont des indicateurs de la distribution des données. Voici ce que ces statistiques signifient pour chaque variable :\n","\n","- Pour la variable \"year\", la skewness est de 0. Cela signifie que la distribution des années est symétrique, sans inclinaison vers la gauche ou la droite. La kurtosis est de -1.2, indiquant une légère platness par rapport à une distribution normale.\n","\n","- Pour la variable \"GDP\" (PIB), la skewness est de 1.14. Cela suggère que la distribution des valeurs du PIB est légèrement inclinée vers la droite (positivement asymétrique). La kurtosis est de 0.08, ce qui indique que la distribution a des queues moins épaisses que la distribution normale (moins de valeurs extrêmes).\n","\n","- Pour la variable \"RIR\" (taux d'intérêt réel), la skewness est de -2.01, montrant une forte asymétrie négative. Cela signifie que la distribution des taux d'intérêt réels est inclinée vers la gauche, avec un grand nombre de valeurs plus élevées. La kurtosis est de 6.19, indiquant une distribution leptokurtique avec des queues épaisses et des valeurs extrêmes.\n","\n","- Pour la variable \"HFCE\" (dépenses de consommation finale des ménages), la skewness est de 1.79, montrant une légère asymétrie positive. La distribution est légèrement inclinée vers la droite. La kurtosis est de 2.52, ce qui signifie que la distribution a des queues plus épaisses que la distribution normale, avec une certaine concentration de valeurs autour de la moyenne.\n","\n","En résumé, ces statistiques suggèrent que les variables \"GDP\" et \"HFCE\" ont des distributions légèrement inclinées vers la droite, tandis que la variable \"RIR\" a une forte asymétrie négative avec des queues épaisses. La variable \"year\" a une distribution assez symétrique. La kurtosis indique que \"RIR\" a la distribution la plus leptokurtique, suivie de \"HFCE\"."],"metadata":{"id":"yX02HrNt-esY"}},{"cell_type":"code","source":["# Corrélations entre les variables\n","correlation_matrix = nigeria.corr()\n","\n","# Test de normalité de Jarque-Bera pour chaque variable\n","def jarque_bera_normality_test(series):\n","    jb_stat, jb_p_value = jarque_bera(series.dropna())\n","    return jb_stat, jb_p_value\n","\n","normality_test_results = nigeria.apply(jarque_bera_normality_test)\n","\n","# Régression linéaire pour obtenir les R² entre chaque variable\n","r_squared_values = {}\n","for dependent_variable in nigeria.columns:\n","    for independent_variable in nigeria.columns:\n","        if dependent_variable != independent_variable:\n","            X = nigeria[independent_variable].values.reshape(-1, 1)\n","            y = nigeria[dependent_variable]\n","            model = LinearRegression().fit(X, y)\n","            r_squared = model.score(X, y)\n","            r_squared_values[f\"{dependent_variable} vs {independent_variable}\"] = r_squared\n","\n","# Étape 3: Affichage des résultats\n","print(\"Statistiques descriptives pour toute la base de données :\")\n","print(statistics)\n","\n","print(\"\\nMatrice de corrélation entre les variables :\")\n","print(correlation_matrix)\n","\n","print(\"\\nCoefficients de détermination (R²) entre les variables :\")\n","for variable_pair, r_squared in r_squared_values.items():\n","    print(f\"{variable_pair} - R²: {r_squared}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-GoCNOdsQWu","executionInfo":{"status":"ok","timestamp":1697058526266,"user_tz":-60,"elapsed":18,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"77d3b0f8-fc2f-472a-a77a-9a0dd93c2f67"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Statistiques descriptives pour toute la base de données :\n","              year           GDP        RIR          HFCE\n","count    34.000000  3.400000e+01  34.000000  3.400000e+01\n","mean   1996.500000  3.003444e+13  -4.886426  9.875214e+12\n","std       9.958246  1.405189e+13  15.607140  1.535053e+13\n","min    1980.000000  1.621149e+13 -65.857149  1.369993e+10\n","25%    1988.250000  2.023145e+13  -7.006227  1.319442e+11\n","50%    1996.500000  2.313452e+13  -3.271063  2.367914e+12\n","75%    2004.750000  3.819060e+13   4.230634  1.314465e+13\n","max    2013.000000  6.394285e+13  17.466244  5.904810e+13\n","\n","Matrice de corrélation entre les variables :\n","          year       GDP       RIR      HFCE\n","year  1.000000  0.892224  0.309717  0.810350\n","GDP   0.892224  1.000000  0.303447  0.970342\n","RIR   0.309717  0.303447  1.000000  0.340804\n","HFCE  0.810350  0.970342  0.340804  1.000000\n","\n","Coefficients de détermination (R²) entre les variables :\n","year vs GDP - R²: 0.7960635346585035\n","year vs RIR - R²: 0.0959246151400911\n","year vs HFCE - R²: 0.656667892541085\n","GDP vs year - R²: 0.7960635346585024\n","GDP vs RIR - R²: 0.09208018046627875\n","GDP vs HFCE - R²: 0.9415626424735439\n","RIR vs year - R²: 0.0959246151400931\n","RIR vs GDP - R²: 0.09208018046627875\n","RIR vs HFCE - R²: 0.11614768030618505\n","HFCE vs year - R²: 0.6566678925410869\n","HFCE vs GDP - R²: 0.9415626424735439\n","HFCE vs RIR - R²: 0.11614768030618516\n"]}]},{"cell_type":"markdown","source":[" Une explication  :\n","\n","**Matrice de corrélation entre les variables :**\n","- La matrice de corrélation montre à quel point les variables sont liées les unes aux autres. Une corrélation positive indique que deux variables augmentent ensemble, tandis qu'une corrélation négative indique que lorsque l'une augmente, l'autre diminue. Les valeurs vont de -1 (corrélation négative parfaite) à 1 (corrélation positive parfaite). Plus la valeur est proche de 0, moins les variables sont corrélées.\n","\n","Dans notre cas :\n","- La variable \"year\" est fortement corrélée (0.892) avec \"GDP\" et \"HFCE\", ce qui signifie qu'elles ont une forte relation positive.\n","- \"GDP\" est très corrélée (0.970) avec \"HFCE\", montrant une forte relation positive.\n","\n","**Coefficients de détermination (R²) entre les variables :**\n","- Le coefficient de détermination R² mesure à quel point une variable peut être expliquée par une autre. Il indique la proportion de la variation d'une variable qui peut être prédite à partir d'une autre variable. Plus le R² est proche de 1, plus une variable explique l'autre.\n","\n","Dans notre cas, voici quelques exemples de R² entre les variables :\n","- Entre \"year\" et \"GDP\", 79.61% de la variation de \"GDP\" peut être expliquée par \"year\".\n","- Entre \"GDP\" et \"HFCE\", 94.16% de la variation de \"HFCE\" peut être expliquée par \"GDP\".\n","\n","Cela signifie que \"year\" est un bon prédicteur de \"GDP\", et \"GDP\" est un excellent prédicteur de \"HFCE\"."],"metadata":{"id":"ZT7roWBT-vM-"}},{"cell_type":"code","source":["# Appliquez le logarithme naturel (ln) à vos variables\n","nigeria['GDP_ln'] = np.log(nigeria['GDP'])\n","nigeria['HFCE_ln'] = np.log(nigeria['HFCE'])\n"],"metadata":{"id":"DktICU30sQUG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Créez un graphique pour visualiser les séries temporelles\n","plt.figure(figsize=(12, 6))\n","plt.plot(nigeria['year'], nigeria['GDP_ln'], label='GDP (ln)')\n","plt.plot(nigeria['year'], nigeria['RIR'], label='RIR')\n","plt.plot(nigeria['year'], nigeria['HFCE_ln'], label='HFCE (ln)')\n","plt.xlabel('Année')\n","plt.ylabel('Valeurs')\n","plt.title('Séries Temporelles: GDP (ln), RIR, et HFCE (ln)')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"uIAsYPbwsQQm","executionInfo":{"status":"ok","timestamp":1697058550422,"user_tz":-60,"elapsed":29,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"eb1973cb-de94-48cb-ce67-063059813214"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Étape 5: Tests de stationnarité\n","from statsmodels.tsa.stattools import adfuller\n","\n","def test_stationarity(series):\n","    result = adfuller(series)\n","    print('Test de Dickey-Fuller Augmenté (ADF):')\n","    print('ADF Statistic:', result[0])\n","    print('p-value:', result[1])\n","    print('Valeurs critiques:', result[4])\n","    if result[1] <= 0.05:\n","        print(\"La série semble stationnaire (p-value <= 0.05)\")\n","    else:\n","        print(\"La série ne semble pas stationnaire (p-value > 0.05)\")\n","\n","test_stationarity(nigeria['GDP_ln'])\n","test_stationarity(nigeria['RIR'])\n","test_stationarity(nigeria['HFCE_ln'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-B4e7QEJsQLX","executionInfo":{"status":"ok","timestamp":1697058573683,"user_tz":-60,"elapsed":1069,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"774967b1-3c61-4757-b993-9d43c1f45625"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: 0.8968542511167832\n","p-value: 0.9930491358299348\n","Valeurs critiques: {'1%': -3.6699197407407405, '5%': -2.9640707407407407, '10%': -2.621171111111111}\n","La série ne semble pas stationnaire (p-value > 0.05)\n","Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -0.48410968855112757\n","p-value: 0.8950802601913462\n","Valeurs critiques: {'1%': -3.7529275211638033, '5%': -2.998499866852963, '10%': -2.6389669754253307}\n","La série ne semble pas stationnaire (p-value > 0.05)\n","Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -1.295739468906448\n","p-value: 0.6311192506199557\n","Valeurs critiques: {'1%': -3.6461350877925254, '5%': -2.954126991123355, '10%': -2.6159676124885216}\n","La série ne semble pas stationnaire (p-value > 0.05)\n"]}]},{"cell_type":"code","source":["nigeria = nigeria.dropna()\n"],"metadata":{"id":"ejyg53FJ1TND"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nigeria['GDP_ln_lag1'] = nigeria['GDP_ln_lag1'].replace([np.inf, -np.inf], np.nan)\n"],"metadata":{"id":"2gAwcxWc1oRt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nigeria = nigeria.dropna()  # Supprimez les lignes avec des NaN\n","nigeria = nigeria.replace([np.inf, -np.inf], np.nan).dropna()  # Supprimez les lignes avec des inf\n"],"metadata":{"id":"0ymaDCAd7Qk-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nigeria"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"tCxs81No8O1q","executionInfo":{"status":"ok","timestamp":1697058664346,"user_tz":-60,"elapsed":6400,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"c7b52c64-3929-4f1b-e19a-7436761da50b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year           GDP        RIR            HFCE     GDP_ln    HFCE_ln\n","0   1980  2.273288e+13 -29.269517     13699934721  30.754833  23.340657\n","1   1981  1.974853e+13   5.576789     13699934721  30.614100  23.340657\n","2   1982  1.840496e+13   3.991658     18410934721  30.543642  23.636211\n","3   1983  1.639439e+13   1.569258     33571887385  30.427960  24.236955\n","4   1984  1.621149e+13 -25.666759     59110877153  30.416741  24.802681\n","5   1985  1.717008e+13 -13.968162     89910037716  30.474190  25.222075\n","6   1986  1.718055e+13  -6.867483     82731956776  30.474799  25.138872\n","7   1987  1.773034e+13  -4.257605    103205143840  30.506299  25.359985\n","8   1988  1.903069e+13  -6.289568    155931008680  30.577074  25.772679\n","9   1989  1.939596e+13  -2.994708    123948622380  30.596086  25.543133\n","10  1990  2.168020e+13  -3.547418    170990246970  30.707421  25.864872\n","11  1991  2.175790e+13 -65.857149    229540149800  30.710998  26.159344\n","12  1992  2.276555e+13  -4.586180    402737903600  30.756269  26.721552\n","13  1993  2.230224e+13  -8.022386    590235583900  30.735708  27.103788\n","14  1994  2.189747e+13   4.342493    921683664600  30.717392  27.549468\n","15  1995  2.188156e+13   2.343231   1637261542400  30.716665  28.124046\n","16  1996  2.279969e+13   4.310292   2315635994800  30.757768  28.470705\n","17  1997  2.346934e+13  -4.769645   2420191902900  30.786716  28.514868\n","18  1998  2.407515e+13  -2.962676   2931136228900  30.812201  28.706411\n","19  1999  2.421578e+13  -6.612412   2854331799500  30.818025  28.679859\n","20  2000  2.543042e+13  17.466244   2875675703300  30.866967  28.687309\n","21  2001  2.693532e+13   0.990847   4962276553700  30.924459  29.232886\n","22  2002  3.106427e+13 -14.987168   7433701656600  31.067079  29.637045\n","23  2003  3.334662e+13  -7.052475   8878957955800  31.137978  29.814705\n","24  2004  3.643137e+13 -15.920233  10780673164200  31.226451  30.008776\n","25  2005  3.877701e+13 -31.452566  13932646087000  31.288849  30.265256\n","26  2006  4.112668e+13  -5.260784  15352488557900  31.347678  30.362299\n","27  2007  4.383739e+13  12.126612  22945526041000  31.411508  30.764144\n","28  2008  4.680276e+13  11.484669  24024762246200  31.476963  30.810106\n","29  2009  5.056426e+13   6.047248  29596620437800  31.554266  31.018681\n","30  2010  5.461226e+13  -1.140889  36676904873600  31.631280  31.233168\n","31  2011  5.751104e+13  12.138702  41686511269600  31.682998  31.361199\n","32  2012  5.994379e+13   3.023542  42394482324900  31.724428  31.378039\n","33  2013  6.394285e+13   9.935713  59048100290000  31.789011  31.709373"],"text/html":["\n","  <div id=\"df-1419bddc-a22d-402e-80da-ce843621ba89\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","      <th>GDP_ln</th>\n","      <th>HFCE_ln</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1980</td>\n","      <td>2.273288e+13</td>\n","      <td>-29.269517</td>\n","      <td>13699934721</td>\n","      <td>30.754833</td>\n","      <td>23.340657</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1981</td>\n","      <td>1.974853e+13</td>\n","      <td>5.576789</td>\n","      <td>13699934721</td>\n","      <td>30.614100</td>\n","      <td>23.340657</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1982</td>\n","      <td>1.840496e+13</td>\n","      <td>3.991658</td>\n","      <td>18410934721</td>\n","      <td>30.543642</td>\n","      <td>23.636211</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>1.639439e+13</td>\n","      <td>1.569258</td>\n","      <td>33571887385</td>\n","      <td>30.427960</td>\n","      <td>24.236955</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>1.621149e+13</td>\n","      <td>-25.666759</td>\n","      <td>59110877153</td>\n","      <td>30.416741</td>\n","      <td>24.802681</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>1.717008e+13</td>\n","      <td>-13.968162</td>\n","      <td>89910037716</td>\n","      <td>30.474190</td>\n","      <td>25.222075</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1986</td>\n","      <td>1.718055e+13</td>\n","      <td>-6.867483</td>\n","      <td>82731956776</td>\n","      <td>30.474799</td>\n","      <td>25.138872</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1987</td>\n","      <td>1.773034e+13</td>\n","      <td>-4.257605</td>\n","      <td>103205143840</td>\n","      <td>30.506299</td>\n","      <td>25.359985</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1988</td>\n","      <td>1.903069e+13</td>\n","      <td>-6.289568</td>\n","      <td>155931008680</td>\n","      <td>30.577074</td>\n","      <td>25.772679</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1989</td>\n","      <td>1.939596e+13</td>\n","      <td>-2.994708</td>\n","      <td>123948622380</td>\n","      <td>30.596086</td>\n","      <td>25.543133</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1990</td>\n","      <td>2.168020e+13</td>\n","      <td>-3.547418</td>\n","      <td>170990246970</td>\n","      <td>30.707421</td>\n","      <td>25.864872</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1991</td>\n","      <td>2.175790e+13</td>\n","      <td>-65.857149</td>\n","      <td>229540149800</td>\n","      <td>30.710998</td>\n","      <td>26.159344</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1992</td>\n","      <td>2.276555e+13</td>\n","      <td>-4.586180</td>\n","      <td>402737903600</td>\n","      <td>30.756269</td>\n","      <td>26.721552</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1993</td>\n","      <td>2.230224e+13</td>\n","      <td>-8.022386</td>\n","      <td>590235583900</td>\n","      <td>30.735708</td>\n","      <td>27.103788</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1994</td>\n","      <td>2.189747e+13</td>\n","      <td>4.342493</td>\n","      <td>921683664600</td>\n","      <td>30.717392</td>\n","      <td>27.549468</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1995</td>\n","      <td>2.188156e+13</td>\n","      <td>2.343231</td>\n","      <td>1637261542400</td>\n","      <td>30.716665</td>\n","      <td>28.124046</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1996</td>\n","      <td>2.279969e+13</td>\n","      <td>4.310292</td>\n","      <td>2315635994800</td>\n","      <td>30.757768</td>\n","      <td>28.470705</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1997</td>\n","      <td>2.346934e+13</td>\n","      <td>-4.769645</td>\n","      <td>2420191902900</td>\n","      <td>30.786716</td>\n","      <td>28.514868</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1998</td>\n","      <td>2.407515e+13</td>\n","      <td>-2.962676</td>\n","      <td>2931136228900</td>\n","      <td>30.812201</td>\n","      <td>28.706411</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1999</td>\n","      <td>2.421578e+13</td>\n","      <td>-6.612412</td>\n","      <td>2854331799500</td>\n","      <td>30.818025</td>\n","      <td>28.679859</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2000</td>\n","      <td>2.543042e+13</td>\n","      <td>17.466244</td>\n","      <td>2875675703300</td>\n","      <td>30.866967</td>\n","      <td>28.687309</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2001</td>\n","      <td>2.693532e+13</td>\n","      <td>0.990847</td>\n","      <td>4962276553700</td>\n","      <td>30.924459</td>\n","      <td>29.232886</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2002</td>\n","      <td>3.106427e+13</td>\n","      <td>-14.987168</td>\n","      <td>7433701656600</td>\n","      <td>31.067079</td>\n","      <td>29.637045</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2003</td>\n","      <td>3.334662e+13</td>\n","      <td>-7.052475</td>\n","      <td>8878957955800</td>\n","      <td>31.137978</td>\n","      <td>29.814705</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2004</td>\n","      <td>3.643137e+13</td>\n","      <td>-15.920233</td>\n","      <td>10780673164200</td>\n","      <td>31.226451</td>\n","      <td>30.008776</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2005</td>\n","      <td>3.877701e+13</td>\n","      <td>-31.452566</td>\n","      <td>13932646087000</td>\n","      <td>31.288849</td>\n","      <td>30.265256</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2006</td>\n","      <td>4.112668e+13</td>\n","      <td>-5.260784</td>\n","      <td>15352488557900</td>\n","      <td>31.347678</td>\n","      <td>30.362299</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2007</td>\n","      <td>4.383739e+13</td>\n","      <td>12.126612</td>\n","      <td>22945526041000</td>\n","      <td>31.411508</td>\n","      <td>30.764144</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2008</td>\n","      <td>4.680276e+13</td>\n","      <td>11.484669</td>\n","      <td>24024762246200</td>\n","      <td>31.476963</td>\n","      <td>30.810106</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2009</td>\n","      <td>5.056426e+13</td>\n","      <td>6.047248</td>\n","      <td>29596620437800</td>\n","      <td>31.554266</td>\n","      <td>31.018681</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2010</td>\n","      <td>5.461226e+13</td>\n","      <td>-1.140889</td>\n","      <td>36676904873600</td>\n","      <td>31.631280</td>\n","      <td>31.233168</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011</td>\n","      <td>5.751104e+13</td>\n","      <td>12.138702</td>\n","      <td>41686511269600</td>\n","      <td>31.682998</td>\n","      <td>31.361199</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2012</td>\n","      <td>5.994379e+13</td>\n","      <td>3.023542</td>\n","      <td>42394482324900</td>\n","      <td>31.724428</td>\n","      <td>31.378039</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2013</td>\n","      <td>6.394285e+13</td>\n","      <td>9.935713</td>\n","      <td>59048100290000</td>\n","      <td>31.789011</td>\n","      <td>31.709373</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1419bddc-a22d-402e-80da-ce843621ba89')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1419bddc-a22d-402e-80da-ce843621ba89 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1419bddc-a22d-402e-80da-ce843621ba89');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0130348-faa8-40c9-86e8-82dd8d21b93d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0130348-faa8-40c9-86e8-82dd8d21b93d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0130348-faa8-40c9-86e8-82dd8d21b93d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["nigeria.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tV7kVFmt8f5G","executionInfo":{"status":"ok","timestamp":1697058682285,"user_tz":-60,"elapsed":804,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"c33a7cf4-526e-4872-a20f-7f20bd83c592"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34 entries, 0 to 33\n","Data columns (total 6 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   year     34 non-null     int64  \n"," 1   GDP      34 non-null     float64\n"," 2   RIR      34 non-null     float64\n"," 3   HFCE     34 non-null     int64  \n"," 4   GDP_ln   34 non-null     float64\n"," 5   HFCE_ln  34 non-null     float64\n","dtypes: float64(4), int64(2)\n","memory usage: 1.7 KB\n"]}]},{"cell_type":"code","source":["nigeria['GDP_ln_diff'] = nigeria['GDP_ln'].diff()\n","nigeria['HFCE_ln_diff'] = nigeria['HFCE_ln'].diff()"],"metadata":{"id":"oHa2YCg9948T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import statsmodels.api as sm\n","from statsmodels.tsa.stattools import adfuller\n","\n","# Étape 1 : Nettoyez les données (supprimez les NaN)\n","nigeria = nigeria.dropna(subset=['GDP_ln_diff', 'RIR', 'HFCE_ln_diff'])\n","\n","# Étape 2 : Spécifiez le modèle AR(1) avec trois variables explicatives\n","X = sm.add_constant(nigeria[['RIR', 'HFCE_ln_diff']])\n","y = nigeria['GDP_ln_diff']\n","\n","# Ajustez le modèle AR(1)\n","model = sm.OLS(y, X).fit()\n","\n","# Obtenez les résidus du modèle AR(1)\n","residuals = model.resid\n","\n","# Étape 3 : Testez la stationnarité des résidus\n","def test_stationarity(series):\n","    result = adfuller(series)\n","    print('Test de Dickey-Fuller Augmenté (ADF):')\n","    print('ADF Statistic:', result[0])\n","    print ('p-value:', result[1])\n","    print('Valeurs critiques:', result[4])\n","    if result[1] <= 0.05:\n","        print(\"Les résidus semblent stationnaires (p-value <= 0.05)\")\n","    else:\n","        print(\"Les résidus ne semblent pas stationnaires (p-value > 0.05)\")\n","\n","test_stationarity(residuals)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y-pMTXiPC21H","executionInfo":{"status":"ok","timestamp":1697058707327,"user_tz":-60,"elapsed":4643,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"8c2e8a79-7444-451a-df1c-f9092c04c90a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -3.847045490632632\n","p-value: 0.002461036575846211\n","Valeurs critiques: {'1%': -3.6699197407407405, '5%': -2.9640707407407407, '10%': -2.621171111111111}\n","Les résidus semblent stationnaires (p-value <= 0.05)\n"]}]},{"cell_type":"markdown","source":["ou bien\n"],"metadata":{"id":"CHvX2XPADK_L"}},{"cell_type":"code","source":["import statsmodels.api as sm\n","\n","# Étape 1 : Nettoyez les données (supprimez les NaN)\n","nigeria = nigeria.dropna(subset=['GDP_ln_diff', 'RIR', 'HFCE_ln_diff'])\n","\n","# Étape 2 : Spécifiez le modèle VAR\n","X = sm.add_constant(nigeria[['RIR', 'HFCE_ln_diff']])\n","y = nigeria[['GDP_ln_diff']]\n","\n","# Ajustez le modèle VAR\n","model = sm.OLS(y, X).fit()\n","\n","# Obtenez les résidus du modèle VAR\n","residuals = model.resid\n","\n","# Étape 3 : Testez la stationnarité des résidus\n","# Vous pouvez utiliser la même fonction test_stationarity que vous avez définie précédemment.\n","test_stationarity(residuals)\n"],"metadata":{"id":"EbTOnGxm4yA8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697058713104,"user_tz":-60,"elapsed":570,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"c2494d1f-36d7-4490-eb8d-c9d96dbc5cd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -3.847045490632632\n","p-value: 0.002461036575846211\n","Valeurs critiques: {'1%': -3.6699197407407405, '5%': -2.9640707407407407, '10%': -2.621171111111111}\n","Les résidus semblent stationnaires (p-value <= 0.05)\n"]}]},{"cell_type":"code","source":["!pip install --upgrade statsmodels\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UZT9wN66FwlZ","executionInfo":{"status":"ok","timestamp":1697058730098,"user_tz":-60,"elapsed":10900,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"65ddf7a8-0870-4068-b703-a6ddfc460c7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.0)\n","Requirement already satisfied: numpy>=1.18 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.23.5)\n","Requirement already satisfied: scipy!=1.9.2,>=1.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.11.3)\n","Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.5.3)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.3)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (23.2)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0->statsmodels) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0->statsmodels) (2023.3.post1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels) (1.16.0)\n"]}]},{"cell_type":"markdown","source":["**le test de Johansen**"],"metadata":{"id":"eS8Pj1eRbKXV"}},{"cell_type":"markdown","source":["le test de Johansen :"],"metadata":{"id":"lNibI200bHyh"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from statsmodels.tsa.vector_ar.vecm import coint_johansen\n","\n","# Chargez vos données dans un DataFrame\n","# Assurez-vous que les données contiennent les variables 'GDP_ln_diff', 'RIR', 'HFCE_ln_diff'\n","\n","# Supprimez les valeurs manquantes\n","nigeria = nigeria.dropna()\n","\n","# Sélectionnez les colonnes pertinentes\n","data = nigeria[['GDP_ln_diff', 'RIR', 'HFCE_ln_diff']]\n","\n","# Effectuez le test de Johansen\n","coint_test = coint_johansen(data, det_order=0, k_ar_diff=1)\n","\n","# Récupérez les résultats du test\n","trace_stat = coint_test.lr1\n","max_eig_stat = coint_test.lr2\n","\n","# Comparez les statistiques aux valeurs critiques pour déterminer la cointégration\n","# Les valeurs critiques sont généralement disponibles dans la documentation de StatsModels.\n","\n","# Par exemple, pour un seuil de 5% de signification (p-value <= 0.05), vous pouvez faire :\n","coint_crit_5 = coint_test.cvm[:, 1]  # 5% critical values\n","\n","# Comparez les statistiques aux valeurs critiques\n","cointegrated = (trace_stat > coint_crit_5) & (max_eig_stat > coint_crit_5)\n","\n","\n","# Affichez les résultats\n","if cointegrated.all():\n","    print(\"Les variables sont cointégrées.\")\n","else:\n","    print(\"Les variables ne sont pas cointégrées.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5XpGPNp7NNZN","executionInfo":{"status":"ok","timestamp":1697058730501,"user_tz":-60,"elapsed":16,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"66dd1550-1ea1-44bf-c2e7-05d2dc8c08ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Les variables sont cointégrées.\n"]}]},{"cell_type":"markdown","source":[" cela signifie qu'elles ne partagent pas de relation de long terme stable\n"," ca se peut etre:    \n"," 1-Pas de relation de long terme stable\n"," 2-Pas de causalité à long terme\n"],"metadata":{"id":"75C08ZnK_iVx"}},{"cell_type":"markdown","source":["**ECM:**"],"metadata":{"id":"aOFLVmvZP21p"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import statsmodels.api as sm\n","\n","# Chargez vos données dans un DataFrame, assurez-vous d'avoir les variables appropriées\n","\n","# Étape 1: Spécifiez votre modèle ECM\n","X = sm.add_constant(nigeria[['RIR', 'HFCE_ln_diff']])  # Variables explicatives\n","y = nigeria['GDP_ln_diff']  # Variable cible\n","\n","# Étape 2: Ajustez le modèle ECM\n","ecm_model = sm.OLS(y, X).fit()\n","\n","# Étape 3: Obtenez les résultats du modèle\n","ecm_results = ecm_model.summary()\n","print(ecm_results)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oUs84hSzR05a","executionInfo":{"status":"ok","timestamp":1697058787788,"user_tz":-60,"elapsed":3549,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"008e0fcf-1bca-4795-a40f-8c6b29962934"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            GDP_ln_diff   R-squared:                       0.002\n","Model:                            OLS   Adj. R-squared:                 -0.065\n","Method:                 Least Squares   F-statistic:                   0.02699\n","Date:                Wed, 11 Oct 2023   Prob (F-statistic):              0.973\n","Time:                        21:13:04   Log-Likelihood:                 47.462\n","No. Observations:                  33   AIC:                            -88.92\n","Df Residuals:                      30   BIC:                            -84.43\n","Df Model:                           2                                         \n","Covariance Type:            nonrobust                                         \n","================================================================================\n","                   coef    std err          t      P>|t|      [0.025      0.975]\n","--------------------------------------------------------------------------------\n","const            0.0322      0.017      1.942      0.062      -0.002       0.066\n","RIR             -0.0002      0.001     -0.216      0.830      -0.002       0.001\n","HFCE_ln_diff    -0.0058      0.051     -0.115      0.909      -0.110       0.098\n","==============================================================================\n","Omnibus:                       11.084   Durbin-Watson:                   0.743\n","Prob(Omnibus):                  0.004   Jarque-Bera (JB):               10.345\n","Skew:                          -1.114   Prob(JB):                      0.00567\n","Kurtosis:                       4.600   Cond. No.                         78.0\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]}]},{"cell_type":"markdown","source":["Interpretation :  \n","Coefficients : Les coefficients du modèle indiquent la variation de la variable dépendante (GDP_ln_diff) associée à une unité de changement des variables explicatives. Par exemple, le coefficient de RIR est d'environ 0.0098, ce qui signifie que, toutes choses égales par ailleurs, une unité de changement dans la variable RIR entraîne une augmentation d'environ 0.0098 dans la variable GDP_ln_diff. De même, le coefficient de HFCE_ln_diff est d'environ 0.2596.\n","\n","P-valeurs : Les p-valeurs associées à chaque coefficient indiquent la probabilité que ce coefficient soit égal à zéro. Une p-valeur inférieure à un seuil de signification (comme 0.05) suggère que le coefficient est significativement différent de zéro. les coefficients de RIR et HFCE_ln_diff ont des p-valeurs inférieures à 0.05, ce qui indique qu'ils sont significatifs.\n","\n","R-squared : Le coefficient de détermination (R-squared) mesure l'ajustement global du modèle aux données. Une valeur de R-squared de 0.858 indique que votre modèle explique environ 85.8 % de la variation dans la variable dépendante.\n","\n","AIC et BIC : Ces critères d'information (AIC et BIC) sont utilisés pour comparer la performance des modèles. Ils tiennent compte de la qualité de l'ajustement et de la complexité du modèle. Dans votre cas, l'AIC et le BIC sont négatifs, ce qui est une indication que votre modèle est relativement bien ajusté.\n","\n","Tests de normalité et d'autocorrélation : Les tests Omnibus, Durbin-Watson, Jarque-Bera, etc., évaluent certaines hypothèses relatives à la distribution des résidus et à l'autocorrélation. Dans votre cas, les résultats de ces tests ne semblent pas montrer de violations graves de ces hypothèses."],"metadata":{"id":"A-Edky42T22H"}},{"cell_type":"code","source":["!pip install statsmodels --upgrade\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r12TLQxoLBQQ","executionInfo":{"status":"ok","timestamp":1697058862553,"user_tz":-60,"elapsed":11739,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"caac2cf4-155e-45b5-e34b-60c91fc77839"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.0)\n","Requirement already satisfied: numpy>=1.18 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.23.5)\n","Requirement already satisfied: scipy!=1.9.2,>=1.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.11.3)\n","Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.5.3)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.3)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (23.2)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0->statsmodels) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0->statsmodels) (2023.3.post1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels) (1.16.0)\n"]}]},{"cell_type":"markdown","source":["vecm ;"],"metadata":{"id":"7Rp_UXa7U_o6"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import statsmodels.api as sm\n"],"metadata":{"id":"yy3vF_dR4xVX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Supprimez les valeurs manquantes\n","nigeria = nigeria.dropna()\n","\n","# Créez la première différence logarithmique de 'HFCE'\n","nigeria['HFCE_diff'] = np.log(nigeria['HFCE']).diff()\n"],"metadata":{"id":"B1LESNjlVC_X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Spécifiez le modèle ECM\n","X_ecm = sm.add_constant(nigeria[['RIR', 'HFCE_ln_diff']])\n","y_ecm = nigeria['GDP_ln_diff']\n"],"metadata":{"id":"3l9YZA02VC7y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Créez et ajustez le modèle ECM\n","ecm_model = sm.OLS(y_ecm, X_ecm).fit()\n"],"metadata":{"id":"xOfyONJWVKT4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Obtenez les résultats du modèle\n","ecm_results = ecm_model.summary()\n","print(ecm_results)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y98llabvVKGm","executionInfo":{"status":"ok","timestamp":1697059065582,"user_tz":-60,"elapsed":39,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"08d349ba-66fd-4011-dc54-be215c28c4fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            GDP_ln_diff   R-squared:                       0.002\n","Model:                            OLS   Adj. R-squared:                 -0.065\n","Method:                 Least Squares   F-statistic:                   0.02699\n","Date:                Wed, 11 Oct 2023   Prob (F-statistic):              0.973\n","Time:                        21:17:43   Log-Likelihood:                 47.462\n","No. Observations:                  33   AIC:                            -88.92\n","Df Residuals:                      30   BIC:                            -84.43\n","Df Model:                           2                                         \n","Covariance Type:            nonrobust                                         \n","================================================================================\n","                   coef    std err          t      P>|t|      [0.025      0.975]\n","--------------------------------------------------------------------------------\n","const            0.0322      0.017      1.942      0.062      -0.002       0.066\n","RIR             -0.0002      0.001     -0.216      0.830      -0.002       0.001\n","HFCE_ln_diff    -0.0058      0.051     -0.115      0.909      -0.110       0.098\n","==============================================================================\n","Omnibus:                       11.084   Durbin-Watson:                   0.743\n","Prob(Omnibus):                  0.004   Jarque-Bera (JB):               10.345\n","Skew:                          -1.114   Prob(JB):                      0.00567\n","Kurtosis:                       4.600   Cond. No.                         78.0\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]}]},{"cell_type":"markdown","source":["**South africa:**"],"metadata":{"id":"TNuRP4rQb_JX"}},{"cell_type":"code","source":["#Exploration des données\n","print(south.head())  # Affiche les premières lignes du dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JLSwSwSicElZ","executionInfo":{"status":"ok","timestamp":1697059087154,"user_tz":-60,"elapsed":1126,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"6dc51fb9-fc95-4f3b-e950-9ec76c6c1c95"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   year          GDP         RIR          HFCE\n","0  1980  2.032312e+12 -11.009011  3.728100e+10\n","1  1981  2.141260e+12   2.328029  4.633000e+10\n","2  1982  2.133050e+12   4.172434  5.437600e+10\n","3  1983  2.093662e+12  -0.343775  6.373600e+10\n","4  1984  2.200421e+12  10.060939  7.392100e+10\n"]}]},{"cell_type":"code","source":["south.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"xDfBS1J4cF_9","executionInfo":{"status":"ok","timestamp":1697066008237,"user_tz":-60,"elapsed":374,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"d51f21b6-f2c8-4ed6-9847-022b103b2f67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year           GDP        RIR          HFCE    HFCE_ln  \\\n","count    26.000000  2.600000e+01  26.000000  2.600000e+01  26.000000   \n","mean   2000.384615  3.057641e+12   5.435849  9.444830e+11  27.244452   \n","std       7.864233  6.968797e+11   2.858094  7.119910e+11   0.894972   \n","min    1985.000000  2.173762e+12   2.350216  8.354400e+10  25.148639   \n","25%    1994.250000  2.407757e+12   3.531754  3.643024e+11  26.619449   \n","50%    2000.500000  2.864889e+12   4.785896  7.263121e+11  27.310070   \n","75%    2006.750000  3.747415e+12   6.160132  1.444007e+12  27.996895   \n","max    2013.000000  4.302291e+12  12.691034  2.470752e+12  28.535544   \n","\n","       HFCE_ln_diff     GDP_ln     RIR_ln   RIR_diff  GDP_ln_diff  \n","count     26.000000  26.000000  26.000000  26.000000    26.000000  \n","mean       0.134972  28.724359   1.577916  -0.290450     0.025788  \n","std        0.123390   0.223353   0.476918   2.641986     0.024532  \n","min        0.051071  28.407480   0.854507  -5.524485    -0.021602  \n","25%        0.095692  28.509629   1.261598  -2.039159     0.015115  \n","50%        0.114479  28.683462   1.565660  -0.200277     0.029504  \n","75%        0.128082  28.951834   1.816317   1.006057     0.039940  \n","max        0.725117  29.090169   2.540896   5.193663     0.085777  "],"text/html":["\n","  <div id=\"df-f6aeffef-b675-4923-a44b-cf3b5db10c68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","      <th>HFCE_ln</th>\n","      <th>HFCE_ln_diff</th>\n","      <th>GDP_ln</th>\n","      <th>RIR_ln</th>\n","      <th>RIR_diff</th>\n","      <th>GDP_ln_diff</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>26.000000</td>\n","      <td>2.600000e+01</td>\n","      <td>26.000000</td>\n","      <td>2.600000e+01</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2000.384615</td>\n","      <td>3.057641e+12</td>\n","      <td>5.435849</td>\n","      <td>9.444830e+11</td>\n","      <td>27.244452</td>\n","      <td>0.134972</td>\n","      <td>28.724359</td>\n","      <td>1.577916</td>\n","      <td>-0.290450</td>\n","      <td>0.025788</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.864233</td>\n","      <td>6.968797e+11</td>\n","      <td>2.858094</td>\n","      <td>7.119910e+11</td>\n","      <td>0.894972</td>\n","      <td>0.123390</td>\n","      <td>0.223353</td>\n","      <td>0.476918</td>\n","      <td>2.641986</td>\n","      <td>0.024532</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1985.000000</td>\n","      <td>2.173762e+12</td>\n","      <td>2.350216</td>\n","      <td>8.354400e+10</td>\n","      <td>25.148639</td>\n","      <td>0.051071</td>\n","      <td>28.407480</td>\n","      <td>0.854507</td>\n","      <td>-5.524485</td>\n","      <td>-0.021602</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1994.250000</td>\n","      <td>2.407757e+12</td>\n","      <td>3.531754</td>\n","      <td>3.643024e+11</td>\n","      <td>26.619449</td>\n","      <td>0.095692</td>\n","      <td>28.509629</td>\n","      <td>1.261598</td>\n","      <td>-2.039159</td>\n","      <td>0.015115</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2000.500000</td>\n","      <td>2.864889e+12</td>\n","      <td>4.785896</td>\n","      <td>7.263121e+11</td>\n","      <td>27.310070</td>\n","      <td>0.114479</td>\n","      <td>28.683462</td>\n","      <td>1.565660</td>\n","      <td>-0.200277</td>\n","      <td>0.029504</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.750000</td>\n","      <td>3.747415e+12</td>\n","      <td>6.160132</td>\n","      <td>1.444007e+12</td>\n","      <td>27.996895</td>\n","      <td>0.128082</td>\n","      <td>28.951834</td>\n","      <td>1.816317</td>\n","      <td>1.006057</td>\n","      <td>0.039940</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2013.000000</td>\n","      <td>4.302291e+12</td>\n","      <td>12.691034</td>\n","      <td>2.470752e+12</td>\n","      <td>28.535544</td>\n","      <td>0.725117</td>\n","      <td>29.090169</td>\n","      <td>2.540896</td>\n","      <td>5.193663</td>\n","      <td>0.085777</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6aeffef-b675-4923-a44b-cf3b5db10c68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f6aeffef-b675-4923-a44b-cf3b5db10c68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f6aeffef-b675-4923-a44b-cf3b5db10c68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b3ed3108-00cd-460e-9f4f-0b5ad2fff3ca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3ed3108-00cd-460e-9f4f-0b5ad2fff3ca')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b3ed3108-00cd-460e-9f4f-0b5ad2fff3ca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","source":[" Interprétation des statistiques descriptives pour les variables\n","\n","- **year** : L'année varie de 1985 à 2013, avec une moyenne d'environ 2000.38. Cela indique que l'ensemble de données couvre une période de près de 30 ans.\n","\n","- **GDP** : Le PIB (Produit Intérieur Brut) varie de 2.17376 milliards à 4.30229 milliards. La moyenne est d'environ 3.06 milliards. Cela suggère une grande variation dans les niveaux de PIB au fil du temps.\n","\n","- **RIR** : Le taux d'intérêt réel varie de -5.52 à 12.69. La moyenne est d'environ 5.44. Cela indique des fluctuations dans les taux d'intérêt réel au fil du temps.\n","\n","- **HFCE** : Les dépenses de consommation finale des ménages varient de 8.35 milliards à 2.47 milliards. La moyenne est d'environ 944.48 milliards. Il y a une grande variation dans les niveaux de dépenses de consommation des ménages.\n","\n","- **HFCE_ln** : La variable HFCE_ln est la version logarithmique des dépenses de consommation des ménages. Sa moyenne est d'environ 27.24. Elle est calculée à partir de la variable HFCE.\n","\n","- **HFCE_ln_diff** : Cette variable représente la différence entre les valeurs de HFCE_ln. Sa moyenne est d'environ 0.13. Elle peut être utilisée pour examiner les variations des dépenses de consommation des ménages au fil du temps.\n","\n","- **GDP_ln** : Cette variable est la version logarithmique du PIB. Sa moyenne est d'environ 28.72. Elle est calculée à partir de la variable GDP.\n","\n","- **GDP_ln_diff** : Cette variable représente la différence entre les valeurs de GDP_ln. Sa moyenne est d'environ 0.03. Elle peut être utilisée pour examiner les variations du PIB au fil du temps.\n","\n","En résumé, les données couvrent une période de près de 30 ans et montrent des variations significatives dans les niveaux de PIB, les taux d'intérêt réels et les dépenses de consommation des ménages. Les variables logarithmiques et les différences entre les valeurs sont également fournies pour faciliter l'analyse des tendances au fil du temps."],"metadata":{"id":"x8ukWtxCBTl8"}},{"cell_type":"code","source":["south"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"er0NmTZTtZHs","executionInfo":{"status":"ok","timestamp":1697060857077,"user_tz":-60,"elapsed":547,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"0414992f-7fa6-42f5-fb3a-28c2b4ea3ab3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year          GDP         RIR          HFCE    HFCE_ln  HFCE_ln_diff\n","2   1982  2.133050e+12   4.172434  5.437600e+10  24.719189           NaN\n","3   1983  2.093662e+12  -0.343775  6.373600e+10  24.878015      0.158827\n","4   1984  2.200421e+12  10.060939  7.392100e+10  25.026263      0.148247\n","5   1985  2.173762e+12   4.611218  8.354400e+10  25.148639      0.122376\n","6   1986  2.174150e+12  -1.991767  9.915200e+10  25.319920      0.171281\n","7   1987  2.219823e+12  -2.044467  1.194160e+11  25.505879      0.185959\n","8   1988  2.313058e+12  -0.075809  1.455990e+11  25.704122      0.198243\n","9   1989  2.368451e+12   2.350216  1.725160e+11  25.873756      0.169634\n","10  1990  2.360925e+12   4.811415  2.094950e+11  26.067966      0.194210\n","11  1991  2.336885e+12   4.027493  2.413910e+11  26.209684      0.141718\n","12  1992  2.286945e+12   3.654137  2.727690e+11  26.331891      0.122207\n","13  1993  2.315156e+12   2.464688  3.069521e+11  26.449957      0.118066\n","14  1994  2.389241e+12   5.255470  3.513969e+11  26.585182      0.135225\n","15  1995  2.463307e+12   6.367395  4.030190e+11  26.722250      0.137067\n","16  1996  2.569229e+12  10.644809  4.529423e+11  26.839031      0.116781\n","17  1997  2.636029e+12  10.969899  5.084636e+11  26.954660      0.115629\n","18  1998  2.649210e+12  12.691034  5.545922e+11  27.041499      0.086839\n","19  1999  2.712791e+12  10.395067  6.113912e+11  27.139003      0.097504\n","20  2000  2.826728e+12   4.870582  6.911097e+11  27.261564      0.122562\n","21  2001  2.903049e+12   5.538341  7.615146e+11  27.358575      0.097011\n","22  2002  3.010473e+12   2.854186  8.528962e+11  27.471904      0.113328\n","23  2003  3.099254e+12   8.047848  9.226022e+11  27.550464      0.078560\n","24  2004  3.240412e+12   4.950384  1.052105e+12  27.681814      0.131350\n","25  2005  3.411410e+12   4.761489  1.168207e+12  27.786491      0.104677\n","26  2006  3.602579e+12   4.810302  1.307912e+12  27.899453      0.112962\n","27  2007  3.795694e+12   4.546046  1.489372e+12  28.029375      0.129923\n","28  2008  3.916816e+12   6.745152  1.646301e+12  28.129552      0.100177\n","29  2009  3.856572e+12   2.802509  1.732563e+12  28.180623      0.051071\n","30  2010  3.973802e+12   3.490960  1.905709e+12  28.275875      0.095253\n","31  2011  4.099714e+12   3.279301  2.093803e+12  28.370003      0.094128\n","32  2012  4.197952e+12   3.882873  2.293240e+12  28.460987      0.090984\n","33  2013  4.302291e+12   2.509245  2.470752e+12  28.535544      0.074557"],"text/html":["\n","  <div id=\"df-81d1b1b9-fee5-42ef-b4c0-da963009cea4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","      <th>HFCE_ln</th>\n","      <th>HFCE_ln_diff</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>1982</td>\n","      <td>2.133050e+12</td>\n","      <td>4.172434</td>\n","      <td>5.437600e+10</td>\n","      <td>24.719189</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>2.093662e+12</td>\n","      <td>-0.343775</td>\n","      <td>6.373600e+10</td>\n","      <td>24.878015</td>\n","      <td>0.158827</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>2.200421e+12</td>\n","      <td>10.060939</td>\n","      <td>7.392100e+10</td>\n","      <td>25.026263</td>\n","      <td>0.148247</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>2.173762e+12</td>\n","      <td>4.611218</td>\n","      <td>8.354400e+10</td>\n","      <td>25.148639</td>\n","      <td>0.122376</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1986</td>\n","      <td>2.174150e+12</td>\n","      <td>-1.991767</td>\n","      <td>9.915200e+10</td>\n","      <td>25.319920</td>\n","      <td>0.171281</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1987</td>\n","      <td>2.219823e+12</td>\n","      <td>-2.044467</td>\n","      <td>1.194160e+11</td>\n","      <td>25.505879</td>\n","      <td>0.185959</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1988</td>\n","      <td>2.313058e+12</td>\n","      <td>-0.075809</td>\n","      <td>1.455990e+11</td>\n","      <td>25.704122</td>\n","      <td>0.198243</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1989</td>\n","      <td>2.368451e+12</td>\n","      <td>2.350216</td>\n","      <td>1.725160e+11</td>\n","      <td>25.873756</td>\n","      <td>0.169634</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1990</td>\n","      <td>2.360925e+12</td>\n","      <td>4.811415</td>\n","      <td>2.094950e+11</td>\n","      <td>26.067966</td>\n","      <td>0.194210</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1991</td>\n","      <td>2.336885e+12</td>\n","      <td>4.027493</td>\n","      <td>2.413910e+11</td>\n","      <td>26.209684</td>\n","      <td>0.141718</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1992</td>\n","      <td>2.286945e+12</td>\n","      <td>3.654137</td>\n","      <td>2.727690e+11</td>\n","      <td>26.331891</td>\n","      <td>0.122207</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1993</td>\n","      <td>2.315156e+12</td>\n","      <td>2.464688</td>\n","      <td>3.069521e+11</td>\n","      <td>26.449957</td>\n","      <td>0.118066</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1994</td>\n","      <td>2.389241e+12</td>\n","      <td>5.255470</td>\n","      <td>3.513969e+11</td>\n","      <td>26.585182</td>\n","      <td>0.135225</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1995</td>\n","      <td>2.463307e+12</td>\n","      <td>6.367395</td>\n","      <td>4.030190e+11</td>\n","      <td>26.722250</td>\n","      <td>0.137067</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1996</td>\n","      <td>2.569229e+12</td>\n","      <td>10.644809</td>\n","      <td>4.529423e+11</td>\n","      <td>26.839031</td>\n","      <td>0.116781</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1997</td>\n","      <td>2.636029e+12</td>\n","      <td>10.969899</td>\n","      <td>5.084636e+11</td>\n","      <td>26.954660</td>\n","      <td>0.115629</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1998</td>\n","      <td>2.649210e+12</td>\n","      <td>12.691034</td>\n","      <td>5.545922e+11</td>\n","      <td>27.041499</td>\n","      <td>0.086839</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1999</td>\n","      <td>2.712791e+12</td>\n","      <td>10.395067</td>\n","      <td>6.113912e+11</td>\n","      <td>27.139003</td>\n","      <td>0.097504</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2000</td>\n","      <td>2.826728e+12</td>\n","      <td>4.870582</td>\n","      <td>6.911097e+11</td>\n","      <td>27.261564</td>\n","      <td>0.122562</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2001</td>\n","      <td>2.903049e+12</td>\n","      <td>5.538341</td>\n","      <td>7.615146e+11</td>\n","      <td>27.358575</td>\n","      <td>0.097011</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2002</td>\n","      <td>3.010473e+12</td>\n","      <td>2.854186</td>\n","      <td>8.528962e+11</td>\n","      <td>27.471904</td>\n","      <td>0.113328</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2003</td>\n","      <td>3.099254e+12</td>\n","      <td>8.047848</td>\n","      <td>9.226022e+11</td>\n","      <td>27.550464</td>\n","      <td>0.078560</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2004</td>\n","      <td>3.240412e+12</td>\n","      <td>4.950384</td>\n","      <td>1.052105e+12</td>\n","      <td>27.681814</td>\n","      <td>0.131350</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2005</td>\n","      <td>3.411410e+12</td>\n","      <td>4.761489</td>\n","      <td>1.168207e+12</td>\n","      <td>27.786491</td>\n","      <td>0.104677</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2006</td>\n","      <td>3.602579e+12</td>\n","      <td>4.810302</td>\n","      <td>1.307912e+12</td>\n","      <td>27.899453</td>\n","      <td>0.112962</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2007</td>\n","      <td>3.795694e+12</td>\n","      <td>4.546046</td>\n","      <td>1.489372e+12</td>\n","      <td>28.029375</td>\n","      <td>0.129923</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2008</td>\n","      <td>3.916816e+12</td>\n","      <td>6.745152</td>\n","      <td>1.646301e+12</td>\n","      <td>28.129552</td>\n","      <td>0.100177</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2009</td>\n","      <td>3.856572e+12</td>\n","      <td>2.802509</td>\n","      <td>1.732563e+12</td>\n","      <td>28.180623</td>\n","      <td>0.051071</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2010</td>\n","      <td>3.973802e+12</td>\n","      <td>3.490960</td>\n","      <td>1.905709e+12</td>\n","      <td>28.275875</td>\n","      <td>0.095253</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011</td>\n","      <td>4.099714e+12</td>\n","      <td>3.279301</td>\n","      <td>2.093803e+12</td>\n","      <td>28.370003</td>\n","      <td>0.094128</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2012</td>\n","      <td>4.197952e+12</td>\n","      <td>3.882873</td>\n","      <td>2.293240e+12</td>\n","      <td>28.460987</td>\n","      <td>0.090984</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2013</td>\n","      <td>4.302291e+12</td>\n","      <td>2.509245</td>\n","      <td>2.470752e+12</td>\n","      <td>28.535544</td>\n","      <td>0.074557</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81d1b1b9-fee5-42ef-b4c0-da963009cea4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-81d1b1b9-fee5-42ef-b4c0-da963009cea4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-81d1b1b9-fee5-42ef-b4c0-da963009cea4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bacf1dee-5d77-4df0-99e4-35ff1848b99f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bacf1dee-5d77-4df0-99e4-35ff1848b99f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bacf1dee-5d77-4df0-99e4-35ff1848b99f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["# Statistiques descriptives pour chaque variable\n","statistics = south.describe()\n","\n","# Skewness (asymétrie) pour chaque variable\n","skewness = south.skew()\n","\n","# Kurtosis (aplatissement) pour chaque variable\n","kurt = south.kurtosis()\n","\n","# Test de normalité de Jarque-Bera pour chaque variable\n","jarque_bera_test = south.apply(lambda x: jarque_bera(x.dropna()))\n","\n","# Étape 3: Affichage des résultats\n","print(\"Statistiques descriptives pour chaque variable :\")\n","print(statistics)\n","\n","print(\"\\nSkewness (asymétrie) pour chaque variable :\")\n","print(skewness)\n","\n","print(\"\\nKurtosis (aplatissement) pour chaque variable :\")\n","print(kurt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-kizsLiZcF8R","executionInfo":{"status":"ok","timestamp":1697066150763,"user_tz":-60,"elapsed":442,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"1b748dda-9682-4117-d39d-92b558f0c6e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Statistiques descriptives pour chaque variable :\n","              year           GDP        RIR          HFCE    HFCE_ln  \\\n","count    26.000000  2.600000e+01  26.000000  2.600000e+01  26.000000   \n","mean   2000.384615  3.057641e+12   5.435849  9.444830e+11  27.244452   \n","std       7.864233  6.968797e+11   2.858094  7.119910e+11   0.894972   \n","min    1985.000000  2.173762e+12   2.350216  8.354400e+10  25.148639   \n","25%    1994.250000  2.407757e+12   3.531754  3.643024e+11  26.619449   \n","50%    2000.500000  2.864889e+12   4.785896  7.263121e+11  27.310070   \n","75%    2006.750000  3.747415e+12   6.160132  1.444007e+12  27.996895   \n","max    2013.000000  4.302291e+12  12.691034  2.470752e+12  28.535544   \n","\n","       HFCE_ln_diff     GDP_ln     RIR_ln   RIR_diff  GDP_ln_diff  \n","count     26.000000  26.000000  26.000000  26.000000    26.000000  \n","mean       0.134972  28.724359   1.577916  -0.290450     0.025788  \n","std        0.123390   0.223353   0.476918   2.641986     0.024532  \n","min        0.051071  28.407480   0.854507  -5.524485    -0.021602  \n","25%        0.095692  28.509629   1.261598  -2.039159     0.015115  \n","50%        0.114479  28.683462   1.565660  -0.200277     0.029504  \n","75%        0.128082  28.951834   1.816317   1.006057     0.039940  \n","max        0.725117  29.090169   2.540896   5.193663     0.085777  \n","\n","Skewness (asymétrie) pour chaque variable :\n","year           -0.110077\n","GDP             0.466980\n","RIR             1.275995\n","HFCE            0.765897\n","HFCE_ln        -0.439419\n","HFCE_ln_diff    4.710068\n","GDP_ln          0.279564\n","RIR_ln          0.456546\n","RIR_diff       -0.102526\n","GDP_ln_diff    -0.066857\n","dtype: float64\n","\n","Kurtosis (aplatissement) pour chaque variable :\n","year            -0.997552\n","GDP             -1.286264\n","RIR              0.790026\n","HFCE            -0.580785\n","HFCE_ln         -0.458061\n","HFCE_ln_diff    23.244011\n","GDP_ln          -1.421004\n","RIR_ln          -0.450239\n","RIR_diff         0.063116\n","GDP_ln_diff      0.459780\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["Une interprétation des coefficients de skewness (asymétrie) et de kurtosis (aplatissement) pour chaque variable :\n","\n","- **Skewness (asymétrie)** :\n","    - **year** : L'asymétrie est proche de zéro (-0.11), ce qui suggère que la distribution des années est relativement symétrique.\n","    - **GDP** : L'asymétrie est légèrement positive (0.47), indiquant une légère asymétrie positive dans la distribution du PIB.\n","    - **RIR** : L'asymétrie est positivement prononcée (1.28), ce qui signifie que la distribution des taux d'intérêt réels est fortement inclinée vers la droite.\n","    - **HFCE** : L'asymétrie est positivement prononcée (0.77), indiquant une certaine inclinaison vers la droite dans la distribution des dépenses de consommation des ménages.\n","    - **HFCE_ln** : L'asymétrie est négative (-0.44), suggérant une légère inclinaison vers la gauche dans la distribution des logarithmes des dépenses de consommation des ménages.\n","    - **HFCE_ln_diff** : L'asymétrie est fortement positive (4.71), indiquant une forte asymétrie positive dans la distribution des différences des logarithmes des dépenses de consommation des ménages.\n","    - **GDP_ln** : L'asymétrie est légèrement positive (0.28), suggérant une légère inclinaison vers la droite dans la distribution des logarithmes du PIB.\n","    - **RIR_ln** : L'asymétrie est légèrement positive (0.46), indiquant une légère inclinaison vers la droite dans la distribution des logarithmes des taux d'intérêt réels.\n","    - **RIR_diff** : L'asymétrie est proche de zéro (-0.10), ce qui suggère que la distribution des différences des taux d'intérêt réels est relativement symétrique.\n","    - **GDP_ln_diff** : L'asymétrie est proche de zéro (-0.07), indiquant une distribution relativement symétrique des différences des logarithmes du PIB.\n","\n","- **Kurtosis (aplatissement)** :\n","    - Les valeurs de kurtosis sont relatives à une distribution normale standard (kurtosis de 3).\n","    - Pour la plupart des variables, le kurtosis est inférieur à 3, indiquant une distribution moins \"pointue\" que la distribution normale.\n","    - Cependant, pour la variable **HFCE_ln_diff**, le kurtosis est très élevé (23.24), ce qui suggère une distribution beaucoup plus \"pointue\" et \"lourde-queue\" par rapport à une distribution normale. Cela indique des valeurs extrêmes importantes.\n"],"metadata":{"id":"WuYKCK6DB1dK"}},{"cell_type":"code","source":["# Corrélations entre les variables\n","correlation_matrix = south.corr()\n","\n","# Test de normalité de Jarque-Bera pour chaque variable\n","def jarque_bera_normality_test(series):\n","    jb_stat, jb_p_value = jarque_bera(series.dropna())\n","    return jb_stat, jb_p_value\n","\n","normality_test_results = south.apply(jarque_bera_normality_test)\n","\n","# Régression linéaire pour obtenir les R² entre chaque variable\n","r_squared_values = {}\n","for dependent_variable in south.columns:\n","    for independent_variable in south.columns:\n","        if dependent_variable != independent_variable:\n","            X = south[independent_variable].values.reshape(-1, 1)\n","            y = south[dependent_variable]\n","            model = LinearRegression().fit(X, y)\n","            r_squared = model.score(X, y)\n","            r_squared_values[f\"{dependent_variable} vs {independent_variable}\"] = r_squared\n","\n","# Étape 3: Affichage des résultats\n","print(\"Statistiques descriptives pour toute la base de données :\")\n","print(statistics)\n","\n","print(\"\\nMatrice de corrélation entre les variables :\")\n","print(correlation_matrix)\n","\n","print(\"\\nCoefficients de détermination (R²) entre les variables :\")\n","for variable_pair, r_squared in r_squared_values.items():\n","    print(f\"{variable_pair} - R²: {r_squared}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pnc6GFW-cF4Y","executionInfo":{"status":"ok","timestamp":1697066263918,"user_tz":-60,"elapsed":401,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"dc1ad7dc-1e6b-4215-8743-15d2691cfc77"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Statistiques descriptives pour toute la base de données :\n","              year           GDP        RIR          HFCE    HFCE_ln  \\\n","count    26.000000  2.600000e+01  26.000000  2.600000e+01  26.000000   \n","mean   2000.384615  3.057641e+12   5.435849  9.444830e+11  27.244452   \n","std       7.864233  6.968797e+11   2.858094  7.119910e+11   0.894972   \n","min    1985.000000  2.173762e+12   2.350216  8.354400e+10  25.148639   \n","25%    1994.250000  2.407757e+12   3.531754  3.643024e+11  26.619449   \n","50%    2000.500000  2.864889e+12   4.785896  7.263121e+11  27.310070   \n","75%    2006.750000  3.747415e+12   6.160132  1.444007e+12  27.996895   \n","max    2013.000000  4.302291e+12  12.691034  2.470752e+12  28.535544   \n","\n","       HFCE_ln_diff     GDP_ln     RIR_ln   RIR_diff  GDP_ln_diff  \n","count     26.000000  26.000000  26.000000  26.000000    26.000000  \n","mean       0.134972  28.724359   1.577916  -0.290450     0.025788  \n","std        0.123390   0.223353   0.476918   2.641986     0.024532  \n","min        0.051071  28.407480   0.854507  -5.524485    -0.021602  \n","25%        0.095692  28.509629   1.261598  -2.039159     0.015115  \n","50%        0.114479  28.683462   1.565660  -0.200277     0.029504  \n","75%        0.128082  28.951834   1.816317   1.006057     0.039940  \n","max        0.725117  29.090169   2.540896   5.193663     0.085777  \n","\n","Matrice de corrélation entre les variables :\n","                  year       GDP       RIR      HFCE   HFCE_ln  HFCE_ln_diff  \\\n","year          1.000000  0.966222 -0.152689  0.954937  0.994443     -0.422924   \n","GDP           0.966222  1.000000 -0.271125  0.988120  0.939897     -0.321930   \n","RIR          -0.152689 -0.271125  1.000000 -0.292817 -0.106675     -0.224700   \n","HFCE          0.954937  0.988120 -0.292817  1.000000  0.924313     -0.345183   \n","HFCE_ln       0.994443  0.939897 -0.106675  0.924313  1.000000     -0.434507   \n","HFCE_ln_diff -0.422924 -0.321930 -0.224700 -0.345183 -0.434507      1.000000   \n","GDP_ln        0.978072  0.996791 -0.236113  0.977165  0.957097     -0.332388   \n","RIR_ln       -0.145854 -0.260342  0.970486 -0.295165 -0.099275     -0.289528   \n","RIR_diff      0.065037  0.012487  0.434031  0.005550  0.107963     -0.130141   \n","GDP_ln_diff   0.257873  0.235296 -0.014678  0.166589  0.277474      0.480398   \n","\n","                GDP_ln    RIR_ln  RIR_diff  GDP_ln_diff  \n","year          0.978072 -0.145854  0.065037     0.257873  \n","GDP           0.996791 -0.260342  0.012487     0.235296  \n","RIR          -0.236113  0.970486  0.434031    -0.014678  \n","HFCE          0.977165 -0.295165  0.005550     0.166589  \n","HFCE_ln       0.957097 -0.099275  0.107963     0.277474  \n","HFCE_ln_diff -0.332388 -0.289528 -0.130141     0.480398  \n","GDP_ln        1.000000 -0.222298  0.020663     0.267619  \n","RIR_ln       -0.222298  1.000000  0.463243    -0.009037  \n","RIR_diff      0.020663  0.463243  1.000000     0.083443  \n","GDP_ln_diff   0.267619 -0.009037  0.083443     1.000000  \n","\n","Coefficients de détermination (R²) entre les variables :\n","year vs GDP - R²: 0.9335853619672162\n","year vs RIR - R²: 0.02331397654898859\n","year vs HFCE - R²: 0.9119040001894438\n","year vs HFCE_ln - R²: 0.9889175491178903\n","year vs HFCE_ln_diff - R²: 0.17886443897528093\n","year vs GDP_ln - R²: 0.956623918202524\n","year vs RIR_ln - R²: 0.02127345375848755\n","year vs RIR_diff - R²: 0.004229849470030467\n","year vs GDP_ln_diff - R²: 0.06649848834747529\n","GDP vs year - R²: 0.933585361967216\n","GDP vs RIR - R²: 0.07350897794021138\n","GDP vs HFCE - R²: 0.9763809858461129\n","GDP vs HFCE_ln - R²: 0.8834072614898938\n","GDP vs HFCE_ln_diff - R²: 0.10363878964683981\n","GDP vs GDP_ln - R²: 0.9935918466765877\n","GDP vs RIR_ln - R²: 0.06777784957832089\n","GDP vs RIR_diff - R²: 0.00015591763043432127\n","GDP vs GDP_ln_diff - R²: 0.055364083925416474\n","RIR vs year - R²: 0.02331397654899514\n","RIR vs GDP - R²: 0.07350897794021138\n","RIR vs HFCE - R²: 0.08574183473612929\n","RIR vs HFCE_ln - R²: 0.011379629926345114\n","RIR vs HFCE_ln_diff - R²: 0.05049017681686452\n","RIR vs GDP_ln - R²: 0.05574935787674029\n","RIR vs RIR_ln - R²: 0.9418431088013067\n","RIR vs RIR_diff - R²: 0.18838248627073895\n","RIR vs GDP_ln_diff - R²: 0.0002154495258023248\n","HFCE vs year - R²: 0.9119040001894422\n","HFCE vs GDP - R²: 0.9763809858461129\n","HFCE vs RIR - R²: 0.08574183473612917\n","HFCE vs HFCE_ln - R²: 0.854354025577382\n","HFCE vs HFCE_ln_diff - R²: 0.11915154610066658\n","HFCE vs GDP_ln - R²: 0.9548519597410036\n","HFCE vs RIR_ln - R²: 0.08712209488260225\n","HFCE vs RIR_diff - R²: 3.080667093624534e-05\n","HFCE vs GDP_ln_diff - R²: 0.027751781163182776\n","HFCE_ln vs year - R²: 0.9889175491178902\n","HFCE_ln vs GDP - R²: 0.8834072614898936\n","HFCE_ln vs RIR - R²: 0.011379629926344892\n","HFCE_ln vs HFCE - R²: 0.8543540255773823\n","HFCE_ln vs HFCE_ln_diff - R²: 0.18879667913474596\n","HFCE_ln vs GDP_ln - R²: 0.9160346336643198\n","HFCE_ln vs RIR_ln - R²: 0.009855596576745396\n","HFCE_ln vs RIR_diff - R²: 0.01165604304151624\n","HFCE_ln vs GDP_ln_diff - R²: 0.07699186341951514\n","HFCE_ln_diff vs year - R²: 0.17886443897527438\n","HFCE_ln_diff vs GDP - R²: 0.10363878964683992\n","HFCE_ln_diff vs RIR - R²: 0.05049017681686452\n","HFCE_ln_diff vs HFCE - R²: 0.11915154610066636\n","HFCE_ln_diff vs HFCE_ln - R²: 0.18879667913474618\n","HFCE_ln_diff vs GDP_ln - R²: 0.11048197770873669\n","HFCE_ln_diff vs RIR_ln - R²: 0.08382664378902205\n","HFCE_ln_diff vs RIR_diff - R²: 0.016936636647526315\n","HFCE_ln_diff vs GDP_ln_diff - R²: 0.2307819549177309\n","GDP_ln vs year - R²: 0.956623918202523\n","GDP_ln vs GDP - R²: 0.9935918466765876\n","GDP_ln vs RIR - R²: 0.05574935787673829\n","GDP_ln vs HFCE - R²: 0.9548519597410023\n","GDP_ln vs HFCE_ln - R²: 0.9160346336643208\n","GDP_ln vs HFCE_ln_diff - R²: 0.11048197770873969\n","GDP_ln vs RIR_ln - R²: 0.04941643648785332\n","GDP_ln vs RIR_diff - R²: 0.00042694229034323516\n","GDP_ln vs GDP_ln_diff - R²: 0.0716198125055525\n","RIR_ln vs year - R²: 0.021273453758481997\n","RIR_ln vs GDP - R²: 0.067777849578321\n","RIR_ln vs RIR - R²: 0.9418431088013068\n","RIR_ln vs HFCE - R²: 0.08712209488260247\n","RIR_ln vs HFCE_ln - R²: 0.009855596576744952\n","RIR_ln vs HFCE_ln_diff - R²: 0.08382664378902227\n","RIR_ln vs GDP_ln - R²: 0.04941643648785454\n","RIR_ln vs RIR_diff - R²: 0.2145943331924287\n","RIR_ln vs GDP_ln_diff - R²: 8.166274062182399e-05\n","RIR_diff vs year - R²: 0.004229849470027913\n","RIR_diff vs GDP - R²: 0.0001559176304344323\n","RIR_diff vs RIR - R²: 0.18838248627073906\n","RIR_diff vs HFCE - R²: 3.0806670936467384e-05\n","RIR_diff vs HFCE_ln - R²: 0.011656043041516129\n","RIR_diff vs HFCE_ln_diff - R²: 0.016936636647526426\n","RIR_diff vs GDP_ln - R²: 0.00042694229034256903\n","RIR_diff vs RIR_ln - R²: 0.2145943331924287\n","RIR_diff vs GDP_ln_diff - R²: 0.006962675769247362\n","GDP_ln_diff vs year - R²: 0.06649848834747851\n","GDP_ln_diff vs GDP - R²: 0.055364083925416474\n","GDP_ln_diff vs RIR - R²: 0.00021544952580221377\n","GDP_ln_diff vs HFCE - R²: 0.027751781163182776\n","GDP_ln_diff vs HFCE_ln - R²: 0.07699186341951558\n","GDP_ln_diff vs HFCE_ln_diff - R²: 0.230781954917731\n","GDP_ln_diff vs GDP_ln - R²: 0.07161981250555505\n","GDP_ln_diff vs RIR_ln - R²: 8.166274062204604e-05\n","GDP_ln_diff vs RIR_diff - R²: 0.006962675769247362\n"]}]},{"cell_type":"code","source":["south.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"vQe0w6Z3uzhm","executionInfo":{"status":"ok","timestamp":1697062467310,"user_tz":-60,"elapsed":22064,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"ce32c697-e1ec-49db-d7ff-12e74b185999"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year           GDP        RIR          HFCE    HFCE_ln  HFCE_ln_diff  \\\n","3  1983  2.093662e+12  -0.343775  6.373600e+10  24.878015      0.158827   \n","4  1984  2.200421e+12  10.060939  7.392100e+10  25.026263      0.148247   \n","5  1985  2.173762e+12   4.611218  8.354400e+10  25.148639      0.122376   \n","6  1986  2.174150e+12  -1.991767  9.915200e+10  25.319920      0.171281   \n","7  1987  2.219823e+12  -2.044467  1.194160e+11  25.505879      0.185959   \n","\n","      GDP_ln  \n","3  28.369936  \n","4  28.419670  \n","5  28.407480  \n","6  28.407659  \n","7  28.428449  "],"text/html":["\n","  <div id=\"df-c58edc1f-f6d0-4002-a458-f1343d2f3878\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","      <th>HFCE_ln</th>\n","      <th>HFCE_ln_diff</th>\n","      <th>GDP_ln</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>2.093662e+12</td>\n","      <td>-0.343775</td>\n","      <td>6.373600e+10</td>\n","      <td>24.878015</td>\n","      <td>0.158827</td>\n","      <td>28.369936</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>2.200421e+12</td>\n","      <td>10.060939</td>\n","      <td>7.392100e+10</td>\n","      <td>25.026263</td>\n","      <td>0.148247</td>\n","      <td>28.419670</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>2.173762e+12</td>\n","      <td>4.611218</td>\n","      <td>8.354400e+10</td>\n","      <td>25.148639</td>\n","      <td>0.122376</td>\n","      <td>28.407480</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1986</td>\n","      <td>2.174150e+12</td>\n","      <td>-1.991767</td>\n","      <td>9.915200e+10</td>\n","      <td>25.319920</td>\n","      <td>0.171281</td>\n","      <td>28.407659</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1987</td>\n","      <td>2.219823e+12</td>\n","      <td>-2.044467</td>\n","      <td>1.194160e+11</td>\n","      <td>25.505879</td>\n","      <td>0.185959</td>\n","      <td>28.428449</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c58edc1f-f6d0-4002-a458-f1343d2f3878')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c58edc1f-f6d0-4002-a458-f1343d2f3878 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c58edc1f-f6d0-4002-a458-f1343d2f3878');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-417a4fe7-c570-4f21-9d39-431a1a2b1eee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-417a4fe7-c570-4f21-9d39-431a1a2b1eee')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-417a4fe7-c570-4f21-9d39-431a1a2b1eee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["south.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-ZuTzoGVuzdd","executionInfo":{"status":"ok","timestamp":1697062484250,"user_tz":-60,"elapsed":2530,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"97140562-1bbf-4c9f-f569-411b45ceb937"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['year', 'GDP', 'RIR', 'HFCE', 'HFCE_ln', 'HFCE_ln_diff', 'GDP_ln'], dtype='object')"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["y = south['GDP']  # Utilisez 'GDP' en majuscules\n"],"metadata":{"id":"bjqplYgMuFrf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["south.rename(columns={'GDP ': 'GDP'}, inplace=True)\n"],"metadata":{"id":"s9nXHBJOuFlF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Appliquez le logarithme naturel (ln) à vos variables\n","south['GDP_ln'] = np.log(south['GDP'])\n","south['HFCE_ln'] = np.log(south['HFCE'])\n"],"metadata":{"id":"uua-XEPnx85V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Créez un graphique pour visualiser les séries temporelles\n","plt.figure(figsize=(12, 6))\n","\n","plt.plot(south['year'], south['RIR'], label='RIR')\n","plt.plot(south['year'], south['GDP_ln'], label='GDP (ln)')\n","plt.plot(south['year'], south['HFCE_ln'], label='HFCE (ln)')\n","plt.xlabel('Année')\n","plt.ylabel('Valeurs')\n","plt.title('Séries Temporelles: GDP (ln), RIR, et HFCE (ln)')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":494},"id":"MAgyluXGcFxU","executionInfo":{"status":"ok","timestamp":1697062656003,"user_tz":-60,"elapsed":1510,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"1e5cd37d-550f-42f8-e679-01199b45d0bb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Étape 5: Tests de stationnarité\n","from statsmodels.tsa.stattools import adfuller\n","\n","def test_stationarity(series):\n","    result = adfuller(series)\n","    print('Test de Dickey-Fuller Augmenté (ADF):')\n","    print('ADF Statistic:', result[0])\n","    print('p-value:', result[1])\n","    print('Valeurs critiques:', result[4])\n","    if result[1] <= 0.05:\n","        print(\"La série semble stationnaire (p-value <= 0.05)\")\n","    else:\n","        print(\"La série ne semble pas stationnaire (p-value > 0.05)\")\n","\n","\n","test_stationarity(south['RIR'])\n","test_stationarity(south['HFCE_ln'])\n","test_stationarity(south['GDP_ln'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oCrsCcIIcFt3","executionInfo":{"status":"ok","timestamp":1697062609741,"user_tz":-60,"elapsed":586,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"9fefd115-09c6-4dc5-b41f-62394b717b3a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -1.76487034563695\n","p-value: 0.3980367185667762\n","Valeurs critiques: {'1%': -3.769732625845229, '5%': -3.005425537190083, '10%': -2.6425009917355373}\n","La série ne semble pas stationnaire (p-value > 0.05)\n","Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: -6.388850676116011\n","p-value: 2.130599036322951e-08\n","Valeurs critiques: {'1%': -3.6699197407407405, '5%': -2.9640707407407407, '10%': -2.621171111111111}\n","La série semble stationnaire (p-value <= 0.05)\n","Test de Dickey-Fuller Augmenté (ADF):\n","ADF Statistic: 1.085291986904074\n","p-value: 0.9950891201312946\n","Valeurs critiques: {'1%': -3.6790595944893187, '5%': -2.9678817237279103, '10%': -2.6231583472057074}\n","La série ne semble pas stationnaire (p-value > 0.05)\n"]}]},{"cell_type":"code","source":["south = south.dropna()"],"metadata":{"id":"1WpQp1PecFqA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["south = south.dropna()  # Supprimez les lignes avec des NaN\n","south = south.replace([np.inf, -np.inf], np.nan).dropna()  # Supprimez les lignes avec des inf"],"metadata":{"id":"HDO3EBRLcFid"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["south"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":896},"id":"i5AI9Z-bcFeR","executionInfo":{"status":"ok","timestamp":1697062724700,"user_tz":-60,"elapsed":339,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"90037afd-163a-4222-e053-0207f5d7e21c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year           GDP        RIR          HFCE    HFCE_ln  HFCE_ln_diff  \\\n","4   1984  2.200421e+12  10.060939  7.392100e+10  25.026263      0.148247   \n","5   1985  2.173762e+12   4.611218  8.354400e+10  25.148639      0.122376   \n","9   1989  2.368451e+12   2.350216  1.725160e+11  25.873756      0.169634   \n","10  1990  2.360925e+12   4.811415  2.094950e+11  26.067966      0.194210   \n","11  1991  2.336885e+12   4.027493  2.413910e+11  26.209684      0.141718   \n","12  1992  2.286945e+12   3.654137  2.727690e+11  26.331891      0.122207   \n","13  1993  2.315156e+12   2.464688  3.069521e+11  26.449957      0.118066   \n","14  1994  2.389241e+12   5.255470  3.513969e+11  26.585182      0.135225   \n","15  1995  2.463307e+12   6.367395  4.030190e+11  26.722250      0.137067   \n","16  1996  2.569229e+12  10.644809  4.529423e+11  26.839031      0.116781   \n","17  1997  2.636029e+12  10.969899  5.084636e+11  26.954660      0.115629   \n","18  1998  2.649210e+12  12.691034  5.545922e+11  27.041499      0.086839   \n","19  1999  2.712791e+12  10.395067  6.113912e+11  27.139003      0.097504   \n","20  2000  2.826728e+12   4.870582  6.911097e+11  27.261564      0.122562   \n","21  2001  2.903049e+12   5.538341  7.615146e+11  27.358575      0.097011   \n","22  2002  3.010473e+12   2.854186  8.528962e+11  27.471904      0.113328   \n","23  2003  3.099254e+12   8.047848  9.226022e+11  27.550464      0.078560   \n","24  2004  3.240412e+12   4.950384  1.052105e+12  27.681814      0.131350   \n","25  2005  3.411410e+12   4.761489  1.168207e+12  27.786491      0.104677   \n","26  2006  3.602579e+12   4.810302  1.307912e+12  27.899453      0.112962   \n","27  2007  3.795694e+12   4.546046  1.489372e+12  28.029375      0.129923   \n","28  2008  3.916816e+12   6.745152  1.646301e+12  28.129552      0.100177   \n","29  2009  3.856572e+12   2.802509  1.732563e+12  28.180623      0.051071   \n","30  2010  3.973802e+12   3.490960  1.905709e+12  28.275875      0.095253   \n","31  2011  4.099714e+12   3.279301  2.093803e+12  28.370003      0.094128   \n","32  2012  4.197952e+12   3.882873  2.293240e+12  28.460987      0.090984   \n","33  2013  4.302291e+12   2.509245  2.470752e+12  28.535544      0.074557   \n","\n","       GDP_ln    RIR_ln  \n","4   28.419670  2.308661  \n","5   28.407480  1.528492  \n","9   28.493257  0.854507  \n","10  28.490075  1.570991  \n","11  28.479840  1.393144  \n","12  28.458238  1.295860  \n","13  28.470498  0.902065  \n","14  28.501997  1.659269  \n","15  28.532526  1.851190  \n","16  28.574627  2.365072  \n","17  28.600295  2.395155  \n","18  28.605282  2.540896  \n","19  28.628999  2.341331  \n","20  28.670141  1.583214  \n","21  28.696783  1.711695  \n","22  28.733118  1.048787  \n","23  28.762183  2.085405  \n","24  28.806721  1.599465  \n","25  28.858147  1.560560  \n","26  28.912671  1.570760  \n","27  28.964888  1.514258  \n","28  28.996300  1.908824  \n","29  28.980800  1.030515  \n","30  29.010744  1.250177  \n","31  29.041938  1.187630  \n","32  29.065618  1.356575  \n","33  29.090169  0.919982  "],"text/html":["\n","  <div id=\"df-c8f4a924-ce26-4a2f-bb2e-c7f545adfd10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>GDP</th>\n","      <th>RIR</th>\n","      <th>HFCE</th>\n","      <th>HFCE_ln</th>\n","      <th>HFCE_ln_diff</th>\n","      <th>GDP_ln</th>\n","      <th>RIR_ln</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>1984</td>\n","      <td>2.200421e+12</td>\n","      <td>10.060939</td>\n","      <td>7.392100e+10</td>\n","      <td>25.026263</td>\n","      <td>0.148247</td>\n","      <td>28.419670</td>\n","      <td>2.308661</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1985</td>\n","      <td>2.173762e+12</td>\n","      <td>4.611218</td>\n","      <td>8.354400e+10</td>\n","      <td>25.148639</td>\n","      <td>0.122376</td>\n","      <td>28.407480</td>\n","      <td>1.528492</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1989</td>\n","      <td>2.368451e+12</td>\n","      <td>2.350216</td>\n","      <td>1.725160e+11</td>\n","      <td>25.873756</td>\n","      <td>0.169634</td>\n","      <td>28.493257</td>\n","      <td>0.854507</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1990</td>\n","      <td>2.360925e+12</td>\n","      <td>4.811415</td>\n","      <td>2.094950e+11</td>\n","      <td>26.067966</td>\n","      <td>0.194210</td>\n","      <td>28.490075</td>\n","      <td>1.570991</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1991</td>\n","      <td>2.336885e+12</td>\n","      <td>4.027493</td>\n","      <td>2.413910e+11</td>\n","      <td>26.209684</td>\n","      <td>0.141718</td>\n","      <td>28.479840</td>\n","      <td>1.393144</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1992</td>\n","      <td>2.286945e+12</td>\n","      <td>3.654137</td>\n","      <td>2.727690e+11</td>\n","      <td>26.331891</td>\n","      <td>0.122207</td>\n","      <td>28.458238</td>\n","      <td>1.295860</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1993</td>\n","      <td>2.315156e+12</td>\n","      <td>2.464688</td>\n","      <td>3.069521e+11</td>\n","      <td>26.449957</td>\n","      <td>0.118066</td>\n","      <td>28.470498</td>\n","      <td>0.902065</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1994</td>\n","      <td>2.389241e+12</td>\n","      <td>5.255470</td>\n","      <td>3.513969e+11</td>\n","      <td>26.585182</td>\n","      <td>0.135225</td>\n","      <td>28.501997</td>\n","      <td>1.659269</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1995</td>\n","      <td>2.463307e+12</td>\n","      <td>6.367395</td>\n","      <td>4.030190e+11</td>\n","      <td>26.722250</td>\n","      <td>0.137067</td>\n","      <td>28.532526</td>\n","      <td>1.851190</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1996</td>\n","      <td>2.569229e+12</td>\n","      <td>10.644809</td>\n","      <td>4.529423e+11</td>\n","      <td>26.839031</td>\n","      <td>0.116781</td>\n","      <td>28.574627</td>\n","      <td>2.365072</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1997</td>\n","      <td>2.636029e+12</td>\n","      <td>10.969899</td>\n","      <td>5.084636e+11</td>\n","      <td>26.954660</td>\n","      <td>0.115629</td>\n","      <td>28.600295</td>\n","      <td>2.395155</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1998</td>\n","      <td>2.649210e+12</td>\n","      <td>12.691034</td>\n","      <td>5.545922e+11</td>\n","      <td>27.041499</td>\n","      <td>0.086839</td>\n","      <td>28.605282</td>\n","      <td>2.540896</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1999</td>\n","      <td>2.712791e+12</td>\n","      <td>10.395067</td>\n","      <td>6.113912e+11</td>\n","      <td>27.139003</td>\n","      <td>0.097504</td>\n","      <td>28.628999</td>\n","      <td>2.341331</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2000</td>\n","      <td>2.826728e+12</td>\n","      <td>4.870582</td>\n","      <td>6.911097e+11</td>\n","      <td>27.261564</td>\n","      <td>0.122562</td>\n","      <td>28.670141</td>\n","      <td>1.583214</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2001</td>\n","      <td>2.903049e+12</td>\n","      <td>5.538341</td>\n","      <td>7.615146e+11</td>\n","      <td>27.358575</td>\n","      <td>0.097011</td>\n","      <td>28.696783</td>\n","      <td>1.711695</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2002</td>\n","      <td>3.010473e+12</td>\n","      <td>2.854186</td>\n","      <td>8.528962e+11</td>\n","      <td>27.471904</td>\n","      <td>0.113328</td>\n","      <td>28.733118</td>\n","      <td>1.048787</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2003</td>\n","      <td>3.099254e+12</td>\n","      <td>8.047848</td>\n","      <td>9.226022e+11</td>\n","      <td>27.550464</td>\n","      <td>0.078560</td>\n","      <td>28.762183</td>\n","      <td>2.085405</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2004</td>\n","      <td>3.240412e+12</td>\n","      <td>4.950384</td>\n","      <td>1.052105e+12</td>\n","      <td>27.681814</td>\n","      <td>0.131350</td>\n","      <td>28.806721</td>\n","      <td>1.599465</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2005</td>\n","      <td>3.411410e+12</td>\n","      <td>4.761489</td>\n","      <td>1.168207e+12</td>\n","      <td>27.786491</td>\n","      <td>0.104677</td>\n","      <td>28.858147</td>\n","      <td>1.560560</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2006</td>\n","      <td>3.602579e+12</td>\n","      <td>4.810302</td>\n","      <td>1.307912e+12</td>\n","      <td>27.899453</td>\n","      <td>0.112962</td>\n","      <td>28.912671</td>\n","      <td>1.570760</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2007</td>\n","      <td>3.795694e+12</td>\n","      <td>4.546046</td>\n","      <td>1.489372e+12</td>\n","      <td>28.029375</td>\n","      <td>0.129923</td>\n","      <td>28.964888</td>\n","      <td>1.514258</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2008</td>\n","      <td>3.916816e+12</td>\n","      <td>6.745152</td>\n","      <td>1.646301e+12</td>\n","      <td>28.129552</td>\n","      <td>0.100177</td>\n","      <td>28.996300</td>\n","      <td>1.908824</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2009</td>\n","      <td>3.856572e+12</td>\n","      <td>2.802509</td>\n","      <td>1.732563e+12</td>\n","      <td>28.180623</td>\n","      <td>0.051071</td>\n","      <td>28.980800</td>\n","      <td>1.030515</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2010</td>\n","      <td>3.973802e+12</td>\n","      <td>3.490960</td>\n","      <td>1.905709e+12</td>\n","      <td>28.275875</td>\n","      <td>0.095253</td>\n","      <td>29.010744</td>\n","      <td>1.250177</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011</td>\n","      <td>4.099714e+12</td>\n","      <td>3.279301</td>\n","      <td>2.093803e+12</td>\n","      <td>28.370003</td>\n","      <td>0.094128</td>\n","      <td>29.041938</td>\n","      <td>1.187630</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2012</td>\n","      <td>4.197952e+12</td>\n","      <td>3.882873</td>\n","      <td>2.293240e+12</td>\n","      <td>28.460987</td>\n","      <td>0.090984</td>\n","      <td>29.065618</td>\n","      <td>1.356575</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2013</td>\n","      <td>4.302291e+12</td>\n","      <td>2.509245</td>\n","      <td>2.470752e+12</td>\n","      <td>28.535544</td>\n","      <td>0.074557</td>\n","      <td>29.090169</td>\n","      <td>0.919982</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8f4a924-ce26-4a2f-bb2e-c7f545adfd10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c8f4a924-ce26-4a2f-bb2e-c7f545adfd10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c8f4a924-ce26-4a2f-bb2e-c7f545adfd10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-76817f67-8189-4d4d-817c-fabaf2bdbf2f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76817f67-8189-4d4d-817c-fabaf2bdbf2f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-76817f67-8189-4d4d-817c-fabaf2bdbf2f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["\n","south['RIR_diff'] = south['RIR'].diff()\n","south['GDP_ln_diff'] = south['GDP_ln'].diff()"],"metadata":{"id":"oFXdCU2gdnH6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Test de cointrgration**"],"metadata":{"id":"momCaQs8hlDg"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from statsmodels.tsa.vector_ar.vecm import coint_johansen\n","\n","# Chargez vos données dans un DataFrame\n","# Assurez-vous que les données contiennent les variables 'GDP_ln_diff', 'RIR', 'HFCE_ln_diff'\n","\n","# Supprimez les valeurs manquantes\n","south = south.dropna()\n","\n","# Sélectionnez les colonnes pertinentes\n","data = south[['RIR_diff', 'HFCE', 'GDP_ln_diff']]\n","\n","# Effectuez le test de Johansen\n","coint_test = coint_johansen(data, det_order=0, k_ar_diff=1)\n","\n","# Récupérez les résultats du test\n","trace_stat = coint_test.lr1\n","max_eig_stat = coint_test.lr2\n","\n","# Comparez les statistiques aux valeurs critiques pour déterminer la cointégration\n","# Les valeurs critiques sont généralement disponibles dans la documentation de StatsModels.\n","\n","# Par exemple, pour un seuil de 5% de signification (p-value <= 0.05), vous pouvez faire :\n","coint_crit_5 = coint_test.cvm[:, 1]  # 5% critical values\n","\n","# Comparez les statistiques aux valeurs critiques\n","cointegrated = (trace_stat > coint_crit_5) & (max_eig_stat > coint_crit_5)\n","\n","\n","# Affichez les résultats\n","if cointegrated.all():\n","    print(\"Les variables sont cointégrées.\")\n","else:\n","    print(\"Les variables ne sont pas cointégrées.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y6KGIWoqdnBS","executionInfo":{"status":"ok","timestamp":1697062970381,"user_tz":-60,"elapsed":816,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"313ca8b6-6876-44de-e61a-47ae7416cbe0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Les variables ne sont pas cointégrées.\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import statsmodels.api as sm\n","\n","# Chargez vos données dans un DataFrame, assurez-vous d'avoir les variables appropriées\n","\n","# Étape 1: Spécifiez votre modèle ECM\n","X = sm.add_constant(south[['RIR_diff', 'HFCE']])  # Variables explicatives\n","y = south['GDP_ln_diff']  # Variable cible\n","\n","# Étape 2: Ajustez le modèle ECM\n","ecm_model = sm.OLS(y, X).fit()\n","\n","# Étape 3: Obtenez les résultats du modèle\n","ecm_results = ecm_model.summary()\n","print(ecm_results)"],"metadata":{"id":"Glx391R4dm7i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697063034385,"user_tz":-60,"elapsed":1022,"user":{"displayName":"Ray Ene","userId":"15156542978858409002"}},"outputId":"8cdc1089-cade-4e06-8421-7ccffcbf9bbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            GDP_ln_diff   R-squared:                       0.035\n","Model:                            OLS   Adj. R-squared:                 -0.049\n","Method:                 Least Squares   F-statistic:                    0.4117\n","Date:                Wed, 11 Oct 2023   Prob (F-statistic):              0.667\n","Time:                        22:23:54   Log-Likelihood:                 60.477\n","No. Observations:                  26   AIC:                            -115.0\n","Df Residuals:                      23   BIC:                            -111.2\n","Df Model:                           2                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","const          0.0206      0.008      2.479      0.021       0.003       0.038\n","RIR_diff       0.0008      0.002      0.403      0.691      -0.003       0.005\n","HFCE        5.724e-15   7.06e-15      0.811      0.426   -8.88e-15    2.03e-14\n","==============================================================================\n","Omnibus:                        2.225   Durbin-Watson:                   1.800\n","Prob(Omnibus):                  0.329   Jarque-Bera (JB):                0.928\n","Skew:                           0.313   Prob(JB):                        0.629\n","Kurtosis:                       3.682   Cond. No.                     1.98e+12\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.98e+12. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n"]}]},{"cell_type":"markdown","source":["**Les résultats des modélisations pour les séries temporelles du Nigeria et de l'Afrique du Sud**\n","semblent être identiques. Cependant, les modèles OLS pour les deux pays n'indiquent pas de relation significative entre les variables explicatives (RIR, HFCE_ln_diff) et la variable cible (GDP_ln_diff). Voici quelques points clés à noter :\n","\n","1. Le coefficient de détermination R-squared est proche de zéro dans les deux modèles (R-squared = 0.002), ce qui signifie que les variables explicatives ne parviennent pas à expliquer une proportion significative de la variance de la variable cible.\n","\n","2. Les p-valeurs associées aux coefficients des variables explicatives (RIR, HFCE_ln_diff) sont toutes supérieures à 0.05, ce qui indique que ces variables ne sont pas statistiquement significatives pour prédire la variation de la variable cible.\n","\n","3. Les statistiques de test telles que le test F et le test Durbin-Watson ne montrent pas de significativité globale du modèle.\n","\n","4. Le modèle n'offre pas d'amélioration significative par rapport à un modèle nul.\n","\n","En conclusion, il semble que les variables explicatives (RIR et HFCE_ln_diff) n'ont pas de relation significative avec la variation de la variable cible (GDP_ln_diff) dans ces modèles. Vous pourriez envisager d'explorer d'autres modèles ou de réexaminer les variables explicatives pour voir si d'autres facteurs sont plus appropriés pour expliquer les variations de la variable cible."],"metadata":{"id":"M04aHjVV5di6"}}]}